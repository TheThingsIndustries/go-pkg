// Copyright Â© 2024 The Things Industries B.V.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: tti/gateway/controller/northbound/v1/common.proto

package northboundv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkInterfaceType int32

const (
	NetworkInterfaceType_NETWORK_INTERFACE_TYPE_UNSPECIFIED NetworkInterfaceType = 0
	NetworkInterfaceType_NETWORK_INTERFACE_TYPE_CELLULAR    NetworkInterfaceType = 1
	NetworkInterfaceType_NETWORK_INTERFACE_TYPE_WIFI        NetworkInterfaceType = 2
	NetworkInterfaceType_NETWORK_INTERFACE_TYPE_ETHERNET    NetworkInterfaceType = 3
)

// Enum value maps for NetworkInterfaceType.
var (
	NetworkInterfaceType_name = map[int32]string{
		0: "NETWORK_INTERFACE_TYPE_UNSPECIFIED",
		1: "NETWORK_INTERFACE_TYPE_CELLULAR",
		2: "NETWORK_INTERFACE_TYPE_WIFI",
		3: "NETWORK_INTERFACE_TYPE_ETHERNET",
	}
	NetworkInterfaceType_value = map[string]int32{
		"NETWORK_INTERFACE_TYPE_UNSPECIFIED": 0,
		"NETWORK_INTERFACE_TYPE_CELLULAR":    1,
		"NETWORK_INTERFACE_TYPE_WIFI":        2,
		"NETWORK_INTERFACE_TYPE_ETHERNET":    3,
	}
)

func (x NetworkInterfaceType) Enum() *NetworkInterfaceType {
	p := new(NetworkInterfaceType)
	*p = x
	return p
}

func (x NetworkInterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkInterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_tti_gateway_controller_northbound_v1_common_proto_enumTypes[0].Descriptor()
}

func (NetworkInterfaceType) Type() protoreflect.EnumType {
	return &file_tti_gateway_controller_northbound_v1_common_proto_enumTypes[0]
}

func (x NetworkInterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkInterfaceType.Descriptor instead.
func (NetworkInterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_common_proto_rawDescGZIP(), []int{0}
}

type NetworkInterfaceStatus int32

const (
	NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_UNSPECIFIED NetworkInterfaceStatus = 0
	NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_DOWN        NetworkInterfaceStatus = 1
	NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_UP          NetworkInterfaceStatus = 2
	NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_FAILED      NetworkInterfaceStatus = 3
)

// Enum value maps for NetworkInterfaceStatus.
var (
	NetworkInterfaceStatus_name = map[int32]string{
		0: "NETWORK_INTERFACE_STATUS_UNSPECIFIED",
		1: "NETWORK_INTERFACE_STATUS_DOWN",
		2: "NETWORK_INTERFACE_STATUS_UP",
		3: "NETWORK_INTERFACE_STATUS_FAILED",
	}
	NetworkInterfaceStatus_value = map[string]int32{
		"NETWORK_INTERFACE_STATUS_UNSPECIFIED": 0,
		"NETWORK_INTERFACE_STATUS_DOWN":        1,
		"NETWORK_INTERFACE_STATUS_UP":          2,
		"NETWORK_INTERFACE_STATUS_FAILED":      3,
	}
)

func (x NetworkInterfaceStatus) Enum() *NetworkInterfaceStatus {
	p := new(NetworkInterfaceStatus)
	*p = x
	return p
}

func (x NetworkInterfaceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkInterfaceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tti_gateway_controller_northbound_v1_common_proto_enumTypes[1].Descriptor()
}

func (NetworkInterfaceStatus) Type() protoreflect.EnumType {
	return &file_tti_gateway_controller_northbound_v1_common_proto_enumTypes[1]
}

func (x NetworkInterfaceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkInterfaceStatus.Descriptor instead.
func (NetworkInterfaceStatus) EnumDescriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_common_proto_rawDescGZIP(), []int{1}
}

type LoraPacketForwarderProtocol int32

const (
	LoraPacketForwarderProtocol_LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED   LoraPacketForwarderProtocol = 0
	LoraPacketForwarderProtocol_LORA_PACKET_FORWARDER_PROTOCOL_TTI_V1        LoraPacketForwarderProtocol = 1
	LoraPacketForwarderProtocol_LORA_PACKET_FORWARDER_PROTOCOL_BASIC_STATION LoraPacketForwarderProtocol = 2
)

// Enum value maps for LoraPacketForwarderProtocol.
var (
	LoraPacketForwarderProtocol_name = map[int32]string{
		0: "LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED",
		1: "LORA_PACKET_FORWARDER_PROTOCOL_TTI_V1",
		2: "LORA_PACKET_FORWARDER_PROTOCOL_BASIC_STATION",
	}
	LoraPacketForwarderProtocol_value = map[string]int32{
		"LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED":   0,
		"LORA_PACKET_FORWARDER_PROTOCOL_TTI_V1":        1,
		"LORA_PACKET_FORWARDER_PROTOCOL_BASIC_STATION": 2,
	}
)

func (x LoraPacketForwarderProtocol) Enum() *LoraPacketForwarderProtocol {
	p := new(LoraPacketForwarderProtocol)
	*p = x
	return p
}

func (x LoraPacketForwarderProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoraPacketForwarderProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_tti_gateway_controller_northbound_v1_common_proto_enumTypes[2].Descriptor()
}

func (LoraPacketForwarderProtocol) Type() protoreflect.EnumType {
	return &file_tti_gateway_controller_northbound_v1_common_proto_enumTypes[2]
}

func (x LoraPacketForwarderProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoraPacketForwarderProtocol.Descriptor instead.
func (LoraPacketForwarderProtocol) EnumDescriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_common_proto_rawDescGZIP(), []int{2}
}

type BatteryChargeStatus int32

const (
	BatteryChargeStatus_BATTERY_CHARGE_STATUS_UNSPECIFIED BatteryChargeStatus = 0
	BatteryChargeStatus_BATTERY_CHARGE_STATUS_CHARGING    BatteryChargeStatus = 1
	BatteryChargeStatus_BATTERY_CHARGE_STATUS_DISCHARGING BatteryChargeStatus = 2
	BatteryChargeStatus_BATTERY_CHARGE_STATUS_FULL        BatteryChargeStatus = 3
	BatteryChargeStatus_BATTERY_CHARGE_STATUS_ERROR       BatteryChargeStatus = 4
)

// Enum value maps for BatteryChargeStatus.
var (
	BatteryChargeStatus_name = map[int32]string{
		0: "BATTERY_CHARGE_STATUS_UNSPECIFIED",
		1: "BATTERY_CHARGE_STATUS_CHARGING",
		2: "BATTERY_CHARGE_STATUS_DISCHARGING",
		3: "BATTERY_CHARGE_STATUS_FULL",
		4: "BATTERY_CHARGE_STATUS_ERROR",
	}
	BatteryChargeStatus_value = map[string]int32{
		"BATTERY_CHARGE_STATUS_UNSPECIFIED": 0,
		"BATTERY_CHARGE_STATUS_CHARGING":    1,
		"BATTERY_CHARGE_STATUS_DISCHARGING": 2,
		"BATTERY_CHARGE_STATUS_FULL":        3,
		"BATTERY_CHARGE_STATUS_ERROR":       4,
	}
)

func (x BatteryChargeStatus) Enum() *BatteryChargeStatus {
	p := new(BatteryChargeStatus)
	*p = x
	return p
}

func (x BatteryChargeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BatteryChargeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tti_gateway_controller_northbound_v1_common_proto_enumTypes[3].Descriptor()
}

func (BatteryChargeStatus) Type() protoreflect.EnumType {
	return &file_tti_gateway_controller_northbound_v1_common_proto_enumTypes[3]
}

func (x BatteryChargeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BatteryChargeStatus.Descriptor instead.
func (BatteryChargeStatus) EnumDescriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_common_proto_rawDescGZIP(), []int{3}
}

type NetworkInterfaceAddresses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddresses []uint32 `protobuf:"varint,1,rep,packed,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	SubnetMask  uint32   `protobuf:"varint,2,opt,name=subnet_mask,json=subnetMask,proto3" json:"subnet_mask,omitempty"`
	Gateway     uint32   `protobuf:"varint,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	DnsServers  []uint32 `protobuf:"varint,4,rep,packed,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"`
}

func (x *NetworkInterfaceAddresses) Reset() {
	*x = NetworkInterfaceAddresses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceAddresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceAddresses) ProtoMessage() {}

func (x *NetworkInterfaceAddresses) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceAddresses.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceAddresses) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkInterfaceAddresses) GetIpAddresses() []uint32 {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *NetworkInterfaceAddresses) GetSubnetMask() uint32 {
	if x != nil {
		return x.SubnetMask
	}
	return 0
}

func (x *NetworkInterfaceAddresses) GetGateway() uint32 {
	if x != nil {
		return x.Gateway
	}
	return 0
}

func (x *NetworkInterfaceAddresses) GetDnsServers() []uint32 {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

type NetworkInterfaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      NetworkInterfaceStatus     `protobuf:"varint,1,opt,name=status,proto3,enum=tti.gateway.controller.northbound.v1.NetworkInterfaceStatus" json:"status,omitempty"`
	DhcpEnabled bool                       `protobuf:"varint,2,opt,name=dhcp_enabled,json=dhcpEnabled,proto3" json:"dhcp_enabled,omitempty"`
	Addresses   *NetworkInterfaceAddresses `protobuf:"bytes,3,opt,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *NetworkInterfaceInfo) Reset() {
	*x = NetworkInterfaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceInfo) ProtoMessage() {}

func (x *NetworkInterfaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceInfo.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceInfo) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkInterfaceInfo) GetStatus() NetworkInterfaceStatus {
	if x != nil {
		return x.Status
	}
	return NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_UNSPECIFIED
}

func (x *NetworkInterfaceInfo) GetDhcpEnabled() bool {
	if x != nil {
		return x.DhcpEnabled
	}
	return false
}

func (x *NetworkInterfaceInfo) GetAddresses() *NetworkInterfaceAddresses {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ProfileIDValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProfileIDValue) Reset() {
	*x = ProfileIDValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileIDValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileIDValue) ProtoMessage() {}

func (x *ProfileIDValue) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileIDValue.ProtoReflect.Descriptor instead.
func (*ProfileIDValue) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *ProfileIDValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_tti_gateway_controller_northbound_v1_common_proto protoreflect.FileDescriptor

var file_tti_gateway_controller_northbound_v1_common_proto_rawDesc = []byte{
	0x0a, 0x31, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x24, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x19, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x68, 0x63, 0x70, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5d, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xd8, 0x01, 0x01, 0x7a, 0x02, 0x68,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0xa9, 0x01, 0x0a, 0x14, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x01, 0x12, 0x1f,
	0x0a, 0x1b, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46,
	0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x49, 0x46, 0x49, 0x10, 0x02, 0x12,
	0x23, 0x0a, 0x1f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e,
	0x45, 0x54, 0x10, 0x03, 0x2a, 0xab, 0x01, 0x0a, 0x16, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x28, 0x0a, 0x24, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x46, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b,
	0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x50, 0x10, 0x02, 0x12, 0x23, 0x0a,
	0x1f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41,
	0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x2a, 0xaa, 0x01, 0x0a, 0x1b, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x2a, 0x4c, 0x4f, 0x52, 0x41, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x4c, 0x4f, 0x52, 0x41, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x54, 0x54, 0x49, 0x5f, 0x56, 0x31, 0x10, 0x01, 0x12, 0x30, 0x0a,
	0x2c, 0x4c, 0x4f, 0x52, 0x41, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x4f, 0x52,
	0x57, 0x41, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f,
	0x42, 0x41, 0x53, 0x49, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a,
	0xc8, 0x01, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x21, 0x42, 0x41, 0x54, 0x54, 0x45,
	0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22,
	0x0a, 0x1e, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48,
	0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x43,
	0x48, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x41, 0x54,
	0x54, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x42, 0x41, 0x54,
	0x54, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x42, 0xbf, 0x02, 0x0a, 0x28, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x54, 0x47, 0x43, 0x4e,
	0xaa, 0x02, 0x24, 0x54, 0x74, 0x69, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x24, 0x54, 0x74, 0x69, 0x5c, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x5c, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x30, 0x54, 0x74, 0x69, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x28, 0x54, 0x74, 0x69, 0x3a, 0x3a, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x3a, 0x3a, 0x4e, 0x6f,
	0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tti_gateway_controller_northbound_v1_common_proto_rawDescOnce sync.Once
	file_tti_gateway_controller_northbound_v1_common_proto_rawDescData = file_tti_gateway_controller_northbound_v1_common_proto_rawDesc
)

func file_tti_gateway_controller_northbound_v1_common_proto_rawDescGZIP() []byte {
	file_tti_gateway_controller_northbound_v1_common_proto_rawDescOnce.Do(func() {
		file_tti_gateway_controller_northbound_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_tti_gateway_controller_northbound_v1_common_proto_rawDescData)
	})
	return file_tti_gateway_controller_northbound_v1_common_proto_rawDescData
}

var file_tti_gateway_controller_northbound_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_tti_gateway_controller_northbound_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tti_gateway_controller_northbound_v1_common_proto_goTypes = []interface{}{
	(NetworkInterfaceType)(0),         // 0: tti.gateway.controller.northbound.v1.NetworkInterfaceType
	(NetworkInterfaceStatus)(0),       // 1: tti.gateway.controller.northbound.v1.NetworkInterfaceStatus
	(LoraPacketForwarderProtocol)(0),  // 2: tti.gateway.controller.northbound.v1.LoraPacketForwarderProtocol
	(BatteryChargeStatus)(0),          // 3: tti.gateway.controller.northbound.v1.BatteryChargeStatus
	(*NetworkInterfaceAddresses)(nil), // 4: tti.gateway.controller.northbound.v1.NetworkInterfaceAddresses
	(*NetworkInterfaceInfo)(nil),      // 5: tti.gateway.controller.northbound.v1.NetworkInterfaceInfo
	(*ProfileIDValue)(nil),            // 6: tti.gateway.controller.northbound.v1.ProfileIDValue
}
var file_tti_gateway_controller_northbound_v1_common_proto_depIdxs = []int32{
	1, // 0: tti.gateway.controller.northbound.v1.NetworkInterfaceInfo.status:type_name -> tti.gateway.controller.northbound.v1.NetworkInterfaceStatus
	4, // 1: tti.gateway.controller.northbound.v1.NetworkInterfaceInfo.addresses:type_name -> tti.gateway.controller.northbound.v1.NetworkInterfaceAddresses
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tti_gateway_controller_northbound_v1_common_proto_init() }
func file_tti_gateway_controller_northbound_v1_common_proto_init() {
	if File_tti_gateway_controller_northbound_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceAddresses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileIDValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tti_gateway_controller_northbound_v1_common_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tti_gateway_controller_northbound_v1_common_proto_goTypes,
		DependencyIndexes: file_tti_gateway_controller_northbound_v1_common_proto_depIdxs,
		EnumInfos:         file_tti_gateway_controller_northbound_v1_common_proto_enumTypes,
		MessageInfos:      file_tti_gateway_controller_northbound_v1_common_proto_msgTypes,
	}.Build()
	File_tti_gateway_controller_northbound_v1_common_proto = out.File
	file_tti_gateway_controller_northbound_v1_common_proto_rawDesc = nil
	file_tti_gateway_controller_northbound_v1_common_proto_goTypes = nil
	file_tti_gateway_controller_northbound_v1_common_proto_depIdxs = nil
}
