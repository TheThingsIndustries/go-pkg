// Copyright Â© 2024 The Things Industries B.V.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: tti/gateway/controller/northbound/v1/gateway_admin_service.proto

package northboundv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GatewayAdminServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayId uint64 `protobuf:"fixed64,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
}

func (x *GatewayAdminServiceGetRequest) Reset() {
	*x = GatewayAdminServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayAdminServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayAdminServiceGetRequest) ProtoMessage() {}

func (x *GatewayAdminServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayAdminServiceGetRequest.ProtoReflect.Descriptor instead.
func (*GatewayAdminServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescGZIP(), []int{0}
}

func (x *GatewayAdminServiceGetRequest) GetGatewayId() uint64 {
	if x != nil {
		return x.GatewayId
	}
	return 0
}

type GatewayAdminServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gateway                          *Gateway                        `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	OwnerDomain                      string                          `protobuf:"bytes,2,opt,name=owner_domain,json=ownerDomain,proto3" json:"owner_domain,omitempty"`
	OwnerToken                       string                          `protobuf:"bytes,3,opt,name=owner_token,json=ownerToken,proto3" json:"owner_token,omitempty"`
	SubscriptionStatus               GatewaySubscriptionStatus       `protobuf:"varint,4,opt,name=subscription_status,json=subscriptionStatus,proto3,enum=tti.gateway.controller.northbound.v1.GatewaySubscriptionStatus" json:"subscription_status,omitempty"`
	SubscriptionStatusConfig         *GatewaySubscriptionStatusValue `protobuf:"bytes,5,opt,name=subscription_status_config,json=subscriptionStatusConfig,proto3" json:"subscription_status_config,omitempty"`
	SubscriptionStatusConfigOverride *GatewaySubscriptionStatusValue `protobuf:"bytes,6,opt,name=subscription_status_config_override,json=subscriptionStatusConfigOverride,proto3" json:"subscription_status_config_override,omitempty"`
}

func (x *GatewayAdminServiceGetResponse) Reset() {
	*x = GatewayAdminServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayAdminServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayAdminServiceGetResponse) ProtoMessage() {}

func (x *GatewayAdminServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayAdminServiceGetResponse.ProtoReflect.Descriptor instead.
func (*GatewayAdminServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescGZIP(), []int{1}
}

func (x *GatewayAdminServiceGetResponse) GetGateway() *Gateway {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *GatewayAdminServiceGetResponse) GetOwnerDomain() string {
	if x != nil {
		return x.OwnerDomain
	}
	return ""
}

func (x *GatewayAdminServiceGetResponse) GetOwnerToken() string {
	if x != nil {
		return x.OwnerToken
	}
	return ""
}

func (x *GatewayAdminServiceGetResponse) GetSubscriptionStatus() GatewaySubscriptionStatus {
	if x != nil {
		return x.SubscriptionStatus
	}
	return GatewaySubscriptionStatus_GATEWAY_SUBSCRIPTION_STATUS_UNSPECIFIED
}

func (x *GatewayAdminServiceGetResponse) GetSubscriptionStatusConfig() *GatewaySubscriptionStatusValue {
	if x != nil {
		return x.SubscriptionStatusConfig
	}
	return nil
}

func (x *GatewayAdminServiceGetResponse) GetSubscriptionStatusConfigOverride() *GatewaySubscriptionStatusValue {
	if x != nil {
		return x.SubscriptionStatusConfigOverride
	}
	return nil
}

type GatewayAdminServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayId                        uint64                          `protobuf:"fixed64,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	SubscriptionStatusConfig         *GatewaySubscriptionStatusValue `protobuf:"bytes,2,opt,name=subscription_status_config,json=subscriptionStatusConfig,proto3" json:"subscription_status_config,omitempty"`
	SubscriptionStatusConfigOverride *GatewaySubscriptionStatusValue `protobuf:"bytes,3,opt,name=subscription_status_config_override,json=subscriptionStatusConfigOverride,proto3" json:"subscription_status_config_override,omitempty"`
}

func (x *GatewayAdminServiceUpdateRequest) Reset() {
	*x = GatewayAdminServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayAdminServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayAdminServiceUpdateRequest) ProtoMessage() {}

func (x *GatewayAdminServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayAdminServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*GatewayAdminServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescGZIP(), []int{2}
}

func (x *GatewayAdminServiceUpdateRequest) GetGatewayId() uint64 {
	if x != nil {
		return x.GatewayId
	}
	return 0
}

func (x *GatewayAdminServiceUpdateRequest) GetSubscriptionStatusConfig() *GatewaySubscriptionStatusValue {
	if x != nil {
		return x.SubscriptionStatusConfig
	}
	return nil
}

func (x *GatewayAdminServiceUpdateRequest) GetSubscriptionStatusConfigOverride() *GatewaySubscriptionStatusValue {
	if x != nil {
		return x.SubscriptionStatusConfigOverride
	}
	return nil
}

type GatewayAdminServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GatewayAdminServiceUpdateResponse) Reset() {
	*x = GatewayAdminServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayAdminServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayAdminServiceUpdateResponse) ProtoMessage() {}

func (x *GatewayAdminServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayAdminServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*GatewayAdminServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescGZIP(), []int{3}
}

var File_tti_gateway_controller_northbound_v1_gateway_admin_service_proto protoreflect.FileDescriptor

var file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDesc = []byte{
	0x0a, 0x40, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x24, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x32, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x1d,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x22, 0xba, 0x04, 0x0a,
	0x1e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52,
	0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x70, 0x0a, 0x13,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x12, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x82,
	0x01, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x18, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x93, 0x01, 0x0a, 0x23, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x20, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x82, 0x01,
	0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x18, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x93, 0x01, 0x0a, 0x23, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc4, 0x02,
	0x0a, 0x13, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x43, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x44, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x46, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x74, 0x74,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0xcc, 0x02, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x42, 0x18, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67,
	0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x76, 0x31,
	0xa2, 0x02, 0x04, 0x54, 0x47, 0x43, 0x4e, 0xaa, 0x02, 0x24, 0x54, 0x74, 0x69, 0x2e, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x24, 0x54, 0x74, 0x69, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x30, 0x54, 0x74, 0x69, 0x5c, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x4e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x28, 0x54, 0x74, 0x69, 0x3a, 0x3a,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x3a, 0x3a, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescOnce sync.Once
	file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescData = file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDesc
)

func file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescGZIP() []byte {
	file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescOnce.Do(func() {
		file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescData)
	})
	return file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDescData
}

var file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_goTypes = []interface{}{
	(*GatewayAdminServiceGetRequest)(nil),     // 0: tti.gateway.controller.northbound.v1.GatewayAdminServiceGetRequest
	(*GatewayAdminServiceGetResponse)(nil),    // 1: tti.gateway.controller.northbound.v1.GatewayAdminServiceGetResponse
	(*GatewayAdminServiceUpdateRequest)(nil),  // 2: tti.gateway.controller.northbound.v1.GatewayAdminServiceUpdateRequest
	(*GatewayAdminServiceUpdateResponse)(nil), // 3: tti.gateway.controller.northbound.v1.GatewayAdminServiceUpdateResponse
	(*Gateway)(nil),                        // 4: tti.gateway.controller.northbound.v1.Gateway
	(GatewaySubscriptionStatus)(0),         // 5: tti.gateway.controller.northbound.v1.GatewaySubscriptionStatus
	(*GatewaySubscriptionStatusValue)(nil), // 6: tti.gateway.controller.northbound.v1.GatewaySubscriptionStatusValue
}
var file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_depIdxs = []int32{
	4, // 0: tti.gateway.controller.northbound.v1.GatewayAdminServiceGetResponse.gateway:type_name -> tti.gateway.controller.northbound.v1.Gateway
	5, // 1: tti.gateway.controller.northbound.v1.GatewayAdminServiceGetResponse.subscription_status:type_name -> tti.gateway.controller.northbound.v1.GatewaySubscriptionStatus
	6, // 2: tti.gateway.controller.northbound.v1.GatewayAdminServiceGetResponse.subscription_status_config:type_name -> tti.gateway.controller.northbound.v1.GatewaySubscriptionStatusValue
	6, // 3: tti.gateway.controller.northbound.v1.GatewayAdminServiceGetResponse.subscription_status_config_override:type_name -> tti.gateway.controller.northbound.v1.GatewaySubscriptionStatusValue
	6, // 4: tti.gateway.controller.northbound.v1.GatewayAdminServiceUpdateRequest.subscription_status_config:type_name -> tti.gateway.controller.northbound.v1.GatewaySubscriptionStatusValue
	6, // 5: tti.gateway.controller.northbound.v1.GatewayAdminServiceUpdateRequest.subscription_status_config_override:type_name -> tti.gateway.controller.northbound.v1.GatewaySubscriptionStatusValue
	0, // 6: tti.gateway.controller.northbound.v1.GatewayAdminService.Get:input_type -> tti.gateway.controller.northbound.v1.GatewayAdminServiceGetRequest
	2, // 7: tti.gateway.controller.northbound.v1.GatewayAdminService.Update:input_type -> tti.gateway.controller.northbound.v1.GatewayAdminServiceUpdateRequest
	1, // 8: tti.gateway.controller.northbound.v1.GatewayAdminService.Get:output_type -> tti.gateway.controller.northbound.v1.GatewayAdminServiceGetResponse
	3, // 9: tti.gateway.controller.northbound.v1.GatewayAdminService.Update:output_type -> tti.gateway.controller.northbound.v1.GatewayAdminServiceUpdateResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_init() }
func file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_init() {
	if File_tti_gateway_controller_northbound_v1_gateway_admin_service_proto != nil {
		return
	}
	file_tti_gateway_controller_northbound_v1_gateway_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayAdminServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayAdminServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayAdminServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayAdminServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_goTypes,
		DependencyIndexes: file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_depIdxs,
		MessageInfos:      file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_msgTypes,
	}.Build()
	File_tti_gateway_controller_northbound_v1_gateway_admin_service_proto = out.File
	file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_rawDesc = nil
	file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_goTypes = nil
	file_tti_gateway_controller_northbound_v1_gateway_admin_service_proto_depIdxs = nil
}
