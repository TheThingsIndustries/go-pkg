// Copyright Â© 2024 The Things Industries B.V.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: tti/gateway/controller/northbound/v1/profile_services.proto

package northboundv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WifiProfileServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string       `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group       string       `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	WifiProfile *WifiProfile `protobuf:"bytes,3,opt,name=wifi_profile,json=wifiProfile,proto3" json:"wifi_profile,omitempty"`
}

func (x *WifiProfileServiceCreateRequest) Reset() {
	*x = WifiProfileServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceCreateRequest) ProtoMessage() {}

func (x *WifiProfileServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{0}
}

func (x *WifiProfileServiceCreateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WifiProfileServiceCreateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *WifiProfileServiceCreateRequest) GetWifiProfile() *WifiProfile {
	if x != nil {
		return x.WifiProfile
	}
	return nil
}

type WifiProfileServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId []byte `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *WifiProfileServiceCreateResponse) Reset() {
	*x = WifiProfileServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceCreateResponse) ProtoMessage() {}

func (x *WifiProfileServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{1}
}

func (x *WifiProfileServiceCreateResponse) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type WifiProfileServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Limit  uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *WifiProfileServiceListRequest) Reset() {
	*x = WifiProfileServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceListRequest) ProtoMessage() {}

func (x *WifiProfileServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceListRequest.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceListRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{2}
}

func (x *WifiProfileServiceListRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WifiProfileServiceListRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *WifiProfileServiceListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *WifiProfileServiceListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type WifiProfileServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*WifiProfileServiceListResponse_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Total   uint32                                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *WifiProfileServiceListResponse) Reset() {
	*x = WifiProfileServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceListResponse) ProtoMessage() {}

func (x *WifiProfileServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceListResponse.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceListResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{3}
}

func (x *WifiProfileServiceListResponse) GetEntries() []*WifiProfileServiceListResponse_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *WifiProfileServiceListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type WifiProfileServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group     string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId []byte `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *WifiProfileServiceGetRequest) Reset() {
	*x = WifiProfileServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceGetRequest) ProtoMessage() {}

func (x *WifiProfileServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceGetRequest.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{4}
}

func (x *WifiProfileServiceGetRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WifiProfileServiceGetRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *WifiProfileServiceGetRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type WifiProfileServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiProfile *WifiProfile `protobuf:"bytes,1,opt,name=wifi_profile,json=wifiProfile,proto3" json:"wifi_profile,omitempty"`
}

func (x *WifiProfileServiceGetResponse) Reset() {
	*x = WifiProfileServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceGetResponse) ProtoMessage() {}

func (x *WifiProfileServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceGetResponse.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{5}
}

func (x *WifiProfileServiceGetResponse) GetWifiProfile() *WifiProfile {
	if x != nil {
		return x.WifiProfile
	}
	return nil
}

type WifiProfileServiceGetByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group       string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileName string `protobuf:"bytes,3,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
}

func (x *WifiProfileServiceGetByNameRequest) Reset() {
	*x = WifiProfileServiceGetByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceGetByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceGetByNameRequest) ProtoMessage() {}

func (x *WifiProfileServiceGetByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceGetByNameRequest.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceGetByNameRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{6}
}

func (x *WifiProfileServiceGetByNameRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WifiProfileServiceGetByNameRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *WifiProfileServiceGetByNameRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

type WifiProfileServiceGetByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId   []byte       `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	WifiProfile *WifiProfile `protobuf:"bytes,2,opt,name=wifi_profile,json=wifiProfile,proto3" json:"wifi_profile,omitempty"`
}

func (x *WifiProfileServiceGetByNameResponse) Reset() {
	*x = WifiProfileServiceGetByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceGetByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceGetByNameResponse) ProtoMessage() {}

func (x *WifiProfileServiceGetByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceGetByNameResponse.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceGetByNameResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{7}
}

func (x *WifiProfileServiceGetByNameResponse) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *WifiProfileServiceGetByNameResponse) GetWifiProfile() *WifiProfile {
	if x != nil {
		return x.WifiProfile
	}
	return nil
}

type WifiProfileServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string       `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group       string       `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId   []byte       `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	WifiProfile *WifiProfile `protobuf:"bytes,4,opt,name=wifi_profile,json=wifiProfile,proto3" json:"wifi_profile,omitempty"`
}

func (x *WifiProfileServiceUpdateRequest) Reset() {
	*x = WifiProfileServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceUpdateRequest) ProtoMessage() {}

func (x *WifiProfileServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{8}
}

func (x *WifiProfileServiceUpdateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WifiProfileServiceUpdateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *WifiProfileServiceUpdateRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *WifiProfileServiceUpdateRequest) GetWifiProfile() *WifiProfile {
	if x != nil {
		return x.WifiProfile
	}
	return nil
}

type WifiProfileServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiProfileServiceUpdateResponse) Reset() {
	*x = WifiProfileServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceUpdateResponse) ProtoMessage() {}

func (x *WifiProfileServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{9}
}

type WifiProfileServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group     string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId []byte `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *WifiProfileServiceDeleteRequest) Reset() {
	*x = WifiProfileServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceDeleteRequest) ProtoMessage() {}

func (x *WifiProfileServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{10}
}

func (x *WifiProfileServiceDeleteRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WifiProfileServiceDeleteRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *WifiProfileServiceDeleteRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type WifiProfileServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiProfileServiceDeleteResponse) Reset() {
	*x = WifiProfileServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceDeleteResponse) ProtoMessage() {}

func (x *WifiProfileServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{11}
}

type EthernetProfileServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain          string           `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group           string           `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	EthernetProfile *EthernetProfile `protobuf:"bytes,3,opt,name=ethernet_profile,json=ethernetProfile,proto3" json:"ethernet_profile,omitempty"`
}

func (x *EthernetProfileServiceCreateRequest) Reset() {
	*x = EthernetProfileServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceCreateRequest) ProtoMessage() {}

func (x *EthernetProfileServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{12}
}

func (x *EthernetProfileServiceCreateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EthernetProfileServiceCreateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EthernetProfileServiceCreateRequest) GetEthernetProfile() *EthernetProfile {
	if x != nil {
		return x.EthernetProfile
	}
	return nil
}

type EthernetProfileServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId []byte `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *EthernetProfileServiceCreateResponse) Reset() {
	*x = EthernetProfileServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceCreateResponse) ProtoMessage() {}

func (x *EthernetProfileServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{13}
}

func (x *EthernetProfileServiceCreateResponse) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type EthernetProfileServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Limit  uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *EthernetProfileServiceListRequest) Reset() {
	*x = EthernetProfileServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceListRequest) ProtoMessage() {}

func (x *EthernetProfileServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceListRequest.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceListRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{14}
}

func (x *EthernetProfileServiceListRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EthernetProfileServiceListRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EthernetProfileServiceListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *EthernetProfileServiceListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type EthernetProfileServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*EthernetProfileServiceListResponse_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Total   uint32                                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *EthernetProfileServiceListResponse) Reset() {
	*x = EthernetProfileServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceListResponse) ProtoMessage() {}

func (x *EthernetProfileServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceListResponse.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceListResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{15}
}

func (x *EthernetProfileServiceListResponse) GetEntries() []*EthernetProfileServiceListResponse_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *EthernetProfileServiceListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type EthernetProfileServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group     string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId []byte `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *EthernetProfileServiceGetRequest) Reset() {
	*x = EthernetProfileServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceGetRequest) ProtoMessage() {}

func (x *EthernetProfileServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceGetRequest.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{16}
}

func (x *EthernetProfileServiceGetRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EthernetProfileServiceGetRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EthernetProfileServiceGetRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type EthernetProfileServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthernetProfile *EthernetProfile `protobuf:"bytes,1,opt,name=ethernet_profile,json=ethernetProfile,proto3" json:"ethernet_profile,omitempty"`
}

func (x *EthernetProfileServiceGetResponse) Reset() {
	*x = EthernetProfileServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceGetResponse) ProtoMessage() {}

func (x *EthernetProfileServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceGetResponse.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{17}
}

func (x *EthernetProfileServiceGetResponse) GetEthernetProfile() *EthernetProfile {
	if x != nil {
		return x.EthernetProfile
	}
	return nil
}

type EthernetProfileServiceGetByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group       string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileName string `protobuf:"bytes,3,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
}

func (x *EthernetProfileServiceGetByNameRequest) Reset() {
	*x = EthernetProfileServiceGetByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceGetByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceGetByNameRequest) ProtoMessage() {}

func (x *EthernetProfileServiceGetByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceGetByNameRequest.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceGetByNameRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{18}
}

func (x *EthernetProfileServiceGetByNameRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EthernetProfileServiceGetByNameRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EthernetProfileServiceGetByNameRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

type EthernetProfileServiceGetByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId       []byte           `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	EthernetProfile *EthernetProfile `protobuf:"bytes,2,opt,name=ethernet_profile,json=ethernetProfile,proto3" json:"ethernet_profile,omitempty"`
}

func (x *EthernetProfileServiceGetByNameResponse) Reset() {
	*x = EthernetProfileServiceGetByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceGetByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceGetByNameResponse) ProtoMessage() {}

func (x *EthernetProfileServiceGetByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceGetByNameResponse.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceGetByNameResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{19}
}

func (x *EthernetProfileServiceGetByNameResponse) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *EthernetProfileServiceGetByNameResponse) GetEthernetProfile() *EthernetProfile {
	if x != nil {
		return x.EthernetProfile
	}
	return nil
}

type EthernetProfileServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain          string           `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group           string           `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId       []byte           `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	EthernetProfile *EthernetProfile `protobuf:"bytes,4,opt,name=ethernet_profile,json=ethernetProfile,proto3" json:"ethernet_profile,omitempty"`
}

func (x *EthernetProfileServiceUpdateRequest) Reset() {
	*x = EthernetProfileServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceUpdateRequest) ProtoMessage() {}

func (x *EthernetProfileServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{20}
}

func (x *EthernetProfileServiceUpdateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EthernetProfileServiceUpdateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EthernetProfileServiceUpdateRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *EthernetProfileServiceUpdateRequest) GetEthernetProfile() *EthernetProfile {
	if x != nil {
		return x.EthernetProfile
	}
	return nil
}

type EthernetProfileServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthernetProfileServiceUpdateResponse) Reset() {
	*x = EthernetProfileServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceUpdateResponse) ProtoMessage() {}

func (x *EthernetProfileServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{21}
}

type EthernetProfileServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group     string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId []byte `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *EthernetProfileServiceDeleteRequest) Reset() {
	*x = EthernetProfileServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceDeleteRequest) ProtoMessage() {}

func (x *EthernetProfileServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{22}
}

func (x *EthernetProfileServiceDeleteRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EthernetProfileServiceDeleteRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EthernetProfileServiceDeleteRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type EthernetProfileServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthernetProfileServiceDeleteResponse) Reset() {
	*x = EthernetProfileServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceDeleteResponse) ProtoMessage() {}

func (x *EthernetProfileServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{23}
}

type GeolocationProfileServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain             string              `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group              string              `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	GeolocationProfile *GeolocationProfile `protobuf:"bytes,3,opt,name=geolocation_profile,json=geolocationProfile,proto3" json:"geolocation_profile,omitempty"`
}

func (x *GeolocationProfileServiceCreateRequest) Reset() {
	*x = GeolocationProfileServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceCreateRequest) ProtoMessage() {}

func (x *GeolocationProfileServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{24}
}

func (x *GeolocationProfileServiceCreateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GeolocationProfileServiceCreateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GeolocationProfileServiceCreateRequest) GetGeolocationProfile() *GeolocationProfile {
	if x != nil {
		return x.GeolocationProfile
	}
	return nil
}

type GeolocationProfileServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId []byte `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *GeolocationProfileServiceCreateResponse) Reset() {
	*x = GeolocationProfileServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceCreateResponse) ProtoMessage() {}

func (x *GeolocationProfileServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{25}
}

func (x *GeolocationProfileServiceCreateResponse) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type GeolocationProfileServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Limit  uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GeolocationProfileServiceListRequest) Reset() {
	*x = GeolocationProfileServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceListRequest) ProtoMessage() {}

func (x *GeolocationProfileServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceListRequest.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceListRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{26}
}

func (x *GeolocationProfileServiceListRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GeolocationProfileServiceListRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GeolocationProfileServiceListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GeolocationProfileServiceListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GeolocationProfileServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*GeolocationProfileServiceListResponse_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Total   uint32                                         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GeolocationProfileServiceListResponse) Reset() {
	*x = GeolocationProfileServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceListResponse) ProtoMessage() {}

func (x *GeolocationProfileServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceListResponse.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceListResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{27}
}

func (x *GeolocationProfileServiceListResponse) GetEntries() []*GeolocationProfileServiceListResponse_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *GeolocationProfileServiceListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GeolocationProfileServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group     string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId []byte `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *GeolocationProfileServiceGetRequest) Reset() {
	*x = GeolocationProfileServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceGetRequest) ProtoMessage() {}

func (x *GeolocationProfileServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceGetRequest.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{28}
}

func (x *GeolocationProfileServiceGetRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GeolocationProfileServiceGetRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GeolocationProfileServiceGetRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type GeolocationProfileServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeolocationProfile *GeolocationProfile `protobuf:"bytes,1,opt,name=geolocation_profile,json=geolocationProfile,proto3" json:"geolocation_profile,omitempty"`
}

func (x *GeolocationProfileServiceGetResponse) Reset() {
	*x = GeolocationProfileServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceGetResponse) ProtoMessage() {}

func (x *GeolocationProfileServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceGetResponse.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{29}
}

func (x *GeolocationProfileServiceGetResponse) GetGeolocationProfile() *GeolocationProfile {
	if x != nil {
		return x.GeolocationProfile
	}
	return nil
}

type GeolocationProfileServiceGetByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group       string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileName string `protobuf:"bytes,3,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
}

func (x *GeolocationProfileServiceGetByNameRequest) Reset() {
	*x = GeolocationProfileServiceGetByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceGetByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceGetByNameRequest) ProtoMessage() {}

func (x *GeolocationProfileServiceGetByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceGetByNameRequest.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceGetByNameRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{30}
}

func (x *GeolocationProfileServiceGetByNameRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GeolocationProfileServiceGetByNameRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GeolocationProfileServiceGetByNameRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

type GeolocationProfileServiceGetByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId          []byte              `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	GeolocationProfile *GeolocationProfile `protobuf:"bytes,2,opt,name=geolocation_profile,json=geolocationProfile,proto3" json:"geolocation_profile,omitempty"`
}

func (x *GeolocationProfileServiceGetByNameResponse) Reset() {
	*x = GeolocationProfileServiceGetByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceGetByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceGetByNameResponse) ProtoMessage() {}

func (x *GeolocationProfileServiceGetByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceGetByNameResponse.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceGetByNameResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{31}
}

func (x *GeolocationProfileServiceGetByNameResponse) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *GeolocationProfileServiceGetByNameResponse) GetGeolocationProfile() *GeolocationProfile {
	if x != nil {
		return x.GeolocationProfile
	}
	return nil
}

type GeolocationProfileServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain             string              `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group              string              `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId          []byte              `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	GeolocationProfile *GeolocationProfile `protobuf:"bytes,4,opt,name=geolocation_profile,json=geolocationProfile,proto3" json:"geolocation_profile,omitempty"`
}

func (x *GeolocationProfileServiceUpdateRequest) Reset() {
	*x = GeolocationProfileServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceUpdateRequest) ProtoMessage() {}

func (x *GeolocationProfileServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{32}
}

func (x *GeolocationProfileServiceUpdateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GeolocationProfileServiceUpdateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GeolocationProfileServiceUpdateRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *GeolocationProfileServiceUpdateRequest) GetGeolocationProfile() *GeolocationProfile {
	if x != nil {
		return x.GeolocationProfile
	}
	return nil
}

type GeolocationProfileServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GeolocationProfileServiceUpdateResponse) Reset() {
	*x = GeolocationProfileServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceUpdateResponse) ProtoMessage() {}

func (x *GeolocationProfileServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{33}
}

type GeolocationProfileServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group     string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId []byte `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *GeolocationProfileServiceDeleteRequest) Reset() {
	*x = GeolocationProfileServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceDeleteRequest) ProtoMessage() {}

func (x *GeolocationProfileServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{34}
}

func (x *GeolocationProfileServiceDeleteRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GeolocationProfileServiceDeleteRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GeolocationProfileServiceDeleteRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type GeolocationProfileServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GeolocationProfileServiceDeleteResponse) Reset() {
	*x = GeolocationProfileServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceDeleteResponse) ProtoMessage() {}

func (x *GeolocationProfileServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{35}
}

type LoraPacketForwarderProfileServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain                     string                      `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group                      string                      `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	LoraPacketForwarderProfile *LoraPacketForwarderProfile `protobuf:"bytes,3,opt,name=lora_packet_forwarder_profile,json=loraPacketForwarderProfile,proto3" json:"lora_packet_forwarder_profile,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceCreateRequest) Reset() {
	*x = LoraPacketForwarderProfileServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceCreateRequest) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{36}
}

func (x *LoraPacketForwarderProfileServiceCreateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceCreateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceCreateRequest) GetLoraPacketForwarderProfile() *LoraPacketForwarderProfile {
	if x != nil {
		return x.LoraPacketForwarderProfile
	}
	return nil
}

type LoraPacketForwarderProfileServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId []byte `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceCreateResponse) Reset() {
	*x = LoraPacketForwarderProfileServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceCreateResponse) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{37}
}

func (x *LoraPacketForwarderProfileServiceCreateResponse) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type LoraPacketForwarderProfileServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Limit  uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceListRequest) Reset() {
	*x = LoraPacketForwarderProfileServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceListRequest) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceListRequest.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceListRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{38}
}

func (x *LoraPacketForwarderProfileServiceListRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceListRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LoraPacketForwarderProfileServiceListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type LoraPacketForwarderProfileServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*LoraPacketForwarderProfileServiceListResponse_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Total   uint32                                                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceListResponse) Reset() {
	*x = LoraPacketForwarderProfileServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceListResponse) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceListResponse.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceListResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{39}
}

func (x *LoraPacketForwarderProfileServiceListResponse) GetEntries() []*LoraPacketForwarderProfileServiceListResponse_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *LoraPacketForwarderProfileServiceListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type LoraPacketForwarderProfileServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group     string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId []byte `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceGetRequest) Reset() {
	*x = LoraPacketForwarderProfileServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceGetRequest) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceGetRequest.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{40}
}

func (x *LoraPacketForwarderProfileServiceGetRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceGetRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceGetRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type LoraPacketForwarderProfileServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoraPacketForwarderProfile *LoraPacketForwarderProfile `protobuf:"bytes,1,opt,name=lora_packet_forwarder_profile,json=loraPacketForwarderProfile,proto3" json:"lora_packet_forwarder_profile,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceGetResponse) Reset() {
	*x = LoraPacketForwarderProfileServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceGetResponse) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceGetResponse.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{41}
}

func (x *LoraPacketForwarderProfileServiceGetResponse) GetLoraPacketForwarderProfile() *LoraPacketForwarderProfile {
	if x != nil {
		return x.LoraPacketForwarderProfile
	}
	return nil
}

type LoraPacketForwarderProfileServiceGetByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group       string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileName string `protobuf:"bytes,3,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceGetByNameRequest) Reset() {
	*x = LoraPacketForwarderProfileServiceGetByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceGetByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceGetByNameRequest) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceGetByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceGetByNameRequest.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceGetByNameRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{42}
}

func (x *LoraPacketForwarderProfileServiceGetByNameRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceGetByNameRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceGetByNameRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

type LoraPacketForwarderProfileServiceGetByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId                  []byte                      `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	LoraPacketForwarderProfile *LoraPacketForwarderProfile `protobuf:"bytes,2,opt,name=lora_packet_forwarder_profile,json=loraPacketForwarderProfile,proto3" json:"lora_packet_forwarder_profile,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceGetByNameResponse) Reset() {
	*x = LoraPacketForwarderProfileServiceGetByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceGetByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceGetByNameResponse) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceGetByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceGetByNameResponse.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceGetByNameResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{43}
}

func (x *LoraPacketForwarderProfileServiceGetByNameResponse) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *LoraPacketForwarderProfileServiceGetByNameResponse) GetLoraPacketForwarderProfile() *LoraPacketForwarderProfile {
	if x != nil {
		return x.LoraPacketForwarderProfile
	}
	return nil
}

type LoraPacketForwarderProfileServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain                     string                      `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group                      string                      `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId                  []byte                      `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	LoraPacketForwarderProfile *LoraPacketForwarderProfile `protobuf:"bytes,4,opt,name=lora_packet_forwarder_profile,json=loraPacketForwarderProfile,proto3" json:"lora_packet_forwarder_profile,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceUpdateRequest) Reset() {
	*x = LoraPacketForwarderProfileServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceUpdateRequest) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{44}
}

func (x *LoraPacketForwarderProfileServiceUpdateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceUpdateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceUpdateRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *LoraPacketForwarderProfileServiceUpdateRequest) GetLoraPacketForwarderProfile() *LoraPacketForwarderProfile {
	if x != nil {
		return x.LoraPacketForwarderProfile
	}
	return nil
}

type LoraPacketForwarderProfileServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoraPacketForwarderProfileServiceUpdateResponse) Reset() {
	*x = LoraPacketForwarderProfileServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceUpdateResponse) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{45}
}

type LoraPacketForwarderProfileServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Group     string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ProfileId []byte `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceDeleteRequest) Reset() {
	*x = LoraPacketForwarderProfileServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceDeleteRequest) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{46}
}

func (x *LoraPacketForwarderProfileServiceDeleteRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceDeleteRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *LoraPacketForwarderProfileServiceDeleteRequest) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

type LoraPacketForwarderProfileServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoraPacketForwarderProfileServiceDeleteResponse) Reset() {
	*x = LoraPacketForwarderProfileServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceDeleteResponse) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{47}
}

type WifiProfileServiceListResponse_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId   []byte       `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	WifiProfile *WifiProfile `protobuf:"bytes,2,opt,name=wifi_profile,json=wifiProfile,proto3" json:"wifi_profile,omitempty"`
}

func (x *WifiProfileServiceListResponse_Entry) Reset() {
	*x = WifiProfileServiceListResponse_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfileServiceListResponse_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfileServiceListResponse_Entry) ProtoMessage() {}

func (x *WifiProfileServiceListResponse_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfileServiceListResponse_Entry.ProtoReflect.Descriptor instead.
func (*WifiProfileServiceListResponse_Entry) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{3, 0}
}

func (x *WifiProfileServiceListResponse_Entry) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *WifiProfileServiceListResponse_Entry) GetWifiProfile() *WifiProfile {
	if x != nil {
		return x.WifiProfile
	}
	return nil
}

type EthernetProfileServiceListResponse_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId       []byte           `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	EthernetProfile *EthernetProfile `protobuf:"bytes,2,opt,name=ethernet_profile,json=ethernetProfile,proto3" json:"ethernet_profile,omitempty"`
}

func (x *EthernetProfileServiceListResponse_Entry) Reset() {
	*x = EthernetProfileServiceListResponse_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfileServiceListResponse_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfileServiceListResponse_Entry) ProtoMessage() {}

func (x *EthernetProfileServiceListResponse_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfileServiceListResponse_Entry.ProtoReflect.Descriptor instead.
func (*EthernetProfileServiceListResponse_Entry) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{15, 0}
}

func (x *EthernetProfileServiceListResponse_Entry) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *EthernetProfileServiceListResponse_Entry) GetEthernetProfile() *EthernetProfile {
	if x != nil {
		return x.EthernetProfile
	}
	return nil
}

type GeolocationProfileServiceListResponse_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId          []byte              `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	GeolocationProfile *GeolocationProfile `protobuf:"bytes,2,opt,name=geolocation_profile,json=geolocationProfile,proto3" json:"geolocation_profile,omitempty"`
}

func (x *GeolocationProfileServiceListResponse_Entry) Reset() {
	*x = GeolocationProfileServiceListResponse_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfileServiceListResponse_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfileServiceListResponse_Entry) ProtoMessage() {}

func (x *GeolocationProfileServiceListResponse_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfileServiceListResponse_Entry.ProtoReflect.Descriptor instead.
func (*GeolocationProfileServiceListResponse_Entry) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{27, 0}
}

func (x *GeolocationProfileServiceListResponse_Entry) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *GeolocationProfileServiceListResponse_Entry) GetGeolocationProfile() *GeolocationProfile {
	if x != nil {
		return x.GeolocationProfile
	}
	return nil
}

type LoraPacketForwarderProfileServiceListResponse_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId                  []byte                      `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	LoraPacketForwarderProfile *LoraPacketForwarderProfile `protobuf:"bytes,2,opt,name=lora_packet_forwarder_profile,json=loraPacketForwarderProfile,proto3" json:"lora_packet_forwarder_profile,omitempty"`
}

func (x *LoraPacketForwarderProfileServiceListResponse_Entry) Reset() {
	*x = LoraPacketForwarderProfileServiceListResponse_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfileServiceListResponse_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfileServiceListResponse_Entry) ProtoMessage() {}

func (x *LoraPacketForwarderProfileServiceListResponse_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfileServiceListResponse_Entry.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfileServiceListResponse_Entry) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP(), []int{39, 0}
}

func (x *LoraPacketForwarderProfileServiceListResponse_Entry) GetProfileId() []byte {
	if x != nil {
		return x.ProfileId
	}
	return nil
}

func (x *LoraPacketForwarderProfileServiceListResponse_Entry) GetLoraPacketForwarderProfile() *LoraPacketForwarderProfile {
	if x != nil {
		return x.LoraPacketForwarderProfile
	}
	return nil
}

var File_tti_gateway_controller_northbound_v1_profile_services_proto protoreflect.FileDescriptor

var file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x33, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x1f, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72,
	0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x5c, 0x0a,
	0x0c, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0b,
	0x77, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x57,
	0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xf1,
	0x01, 0x0a, 0x1d, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a,
	0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d,
	0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a,
	0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d,
	0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x1e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69,
	0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x1a, 0x7c, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0c, 0x77, 0x69, 0x66,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x0b, 0x77, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0xea, 0x01, 0x0a, 0x1c, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a,
	0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d,
	0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a,
	0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d,
	0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68,
	0x10, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x1d,
	0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0c, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x77, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x22, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67,
	0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d,
	0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d,
	0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d,
	0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d,
	0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x23, 0x57,
	0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x54, 0x0a, 0x0c, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x77, 0x69, 0x66, 0x69,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xcb, 0x02, 0x0a, 0x1f, 0x57, 0x69, 0x66, 0x69,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48,
	0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68, 0x10, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x0c, 0x77, 0x69, 0x66, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0b, 0x77, 0x69, 0x66, 0x69, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x22, 0x0a, 0x20, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x1f, 0x57, 0x69,
	0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a,
	0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68, 0x10, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x57, 0x69, 0x66,
	0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb3, 0x02,
	0x0a, 0x23, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32,
	0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x68, 0x0a, 0x10, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0x45, 0x0a, 0x24, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xf5, 0x01, 0x0a, 0x21, 0x45,
	0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a,
	0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d,
	0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a,
	0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d,
	0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x22, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x88, 0x01, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x60, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x20, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72,
	0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68, 0x10, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x21, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x10, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0f, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xf8, 0x01,
	0x0a, 0x26, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65,
	0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x27, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xdb, 0x02, 0x0a, 0x23, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a,
	0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68, 0x10, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x68, 0x0a, 0x10, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0x26, 0x0a, 0x24, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x23,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e,
	0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28,
	0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c,
	0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28,
	0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x7a, 0x02, 0x68, 0x10, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x26, 0x0a, 0x24, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x26, 0x47, 0x65, 0x6f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28,
	0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f,
	0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e,
	0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f,
	0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x71, 0x0a, 0x13, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x12, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x27, 0x47, 0x65, 0x6f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba,
	0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xbe,
	0x02, 0x0a, 0x25, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x91, 0x01, 0x0a, 0x05,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x13, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x12, 0x67, 0x65, 0x6f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0xf1, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18,
	0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68, 0x10, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x13,
	0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x12, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x6f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32,
	0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x13, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x12, 0x67, 0x65, 0x6f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xe7,
	0x02, 0x0a, 0x26, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72,
	0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68, 0x10, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x71, 0x0a, 0x13, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x12, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x29, 0x0a, 0x27, 0x47, 0x65, 0x6f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82,
	0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f,
	0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d,
	0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29,
	0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f,
	0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d,
	0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29,
	0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68, 0x10, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x27, 0x47, 0x65,
	0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe2, 0x02, 0x0a, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65,
	0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b,
	0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x8b, 0x01, 0x0a,
	0x1d, 0x6c, 0x6f, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f,
	0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x1a,
	0x6c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x50, 0x0a, 0x2f, 0x4c, 0x6f,
	0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x80, 0x02, 0x0a,
	0x2c, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a,
	0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0xe9, 0x02, 0x0a, 0x2d, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x73, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x59, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xac, 0x01, 0x0a,
	0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x83, 0x01, 0x0a, 0x1d, 0x6c, 0x6f, 0x72, 0x61, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x1a, 0x6c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x2b,
	0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48,
	0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61,
	0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04, 0x7a, 0x02, 0x68, 0x10, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x2c, 0x4c, 0x6f, 0x72, 0x61,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x1d, 0x6c, 0x6f, 0x72,
	0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x1a, 0x6c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x83,
	0x02, 0x0a, 0x31, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61,
	0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c,
	0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29,
	0x5c, 0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c,
	0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29,
	0x24, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18,
	0x64, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x32, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x83, 0x01, 0x0a, 0x1d, 0x6c,
	0x6f, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x1a, 0x6c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x8a, 0x03, 0x0a, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e,
	0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28,
	0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c,
	0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28,
	0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x7a, 0x02, 0x68, 0x10, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x8b, 0x01, 0x0a, 0x1d, 0x6c, 0x6f, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x1a, 0x6c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x31, 0x0a,
	0x2f, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xfc, 0x01, 0x0a, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xba, 0x48, 0x67, 0x72, 0x65, 0x18, 0x64, 0x32, 0x61, 0x5e,
	0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28,
	0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x5c,
	0x2e, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x28,
	0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x2d, 0x5d, 0x3f, 0x29, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x24,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x7a, 0x02, 0x68, 0x10, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x31, 0x0a, 0x2f, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xb6, 0x07, 0x0a, 0x12, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x45, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f,
	0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x74, 0x74,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43,
	0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x42, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2,
	0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69,
	0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x45,
	0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66,
	0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x99, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x45, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x46, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xea, 0x07, 0x0a, 0x16,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x49, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x47, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x46, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xaa, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x4c, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4d, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xa1, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x49, 0x2e, 0x74, 0x74,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x49, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x91, 0x08, 0x0a, 0x19, 0x47, 0x65, 0x6f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa7, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x4c, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4d, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xa1, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x9e, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x49, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb0, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x4f, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f,
	0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x4c, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x4d, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xa7, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x4c, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x74, 0x74,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xf9, 0x08, 0x0a,
	0x21, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xb7, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x54, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x55, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb1, 0x01, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x52, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72,
	0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xae, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x51, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x74, 0x74,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xc0, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x57, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x58, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xb7, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x54, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x55, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72,
	0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb7,
	0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x54, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x55, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xc8, 0x02, 0x0a, 0x28, 0x63, 0x6f, 0x6d,
	0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67,
	0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x76, 0x31,
	0xa2, 0x02, 0x04, 0x54, 0x47, 0x43, 0x4e, 0xaa, 0x02, 0x24, 0x54, 0x74, 0x69, 0x2e, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x24, 0x54, 0x74, 0x69, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x30, 0x54, 0x74, 0x69, 0x5c, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x4e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x28, 0x54, 0x74, 0x69, 0x3a, 0x3a,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x3a, 0x3a, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescOnce sync.Once
	file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescData = file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDesc
)

func file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescGZIP() []byte {
	file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescOnce.Do(func() {
		file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescData)
	})
	return file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDescData
}

var file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_tti_gateway_controller_northbound_v1_profile_services_proto_goTypes = []interface{}{
	(*WifiProfileServiceCreateRequest)(nil),                     // 0: tti.gateway.controller.northbound.v1.WifiProfileServiceCreateRequest
	(*WifiProfileServiceCreateResponse)(nil),                    // 1: tti.gateway.controller.northbound.v1.WifiProfileServiceCreateResponse
	(*WifiProfileServiceListRequest)(nil),                       // 2: tti.gateway.controller.northbound.v1.WifiProfileServiceListRequest
	(*WifiProfileServiceListResponse)(nil),                      // 3: tti.gateway.controller.northbound.v1.WifiProfileServiceListResponse
	(*WifiProfileServiceGetRequest)(nil),                        // 4: tti.gateway.controller.northbound.v1.WifiProfileServiceGetRequest
	(*WifiProfileServiceGetResponse)(nil),                       // 5: tti.gateway.controller.northbound.v1.WifiProfileServiceGetResponse
	(*WifiProfileServiceGetByNameRequest)(nil),                  // 6: tti.gateway.controller.northbound.v1.WifiProfileServiceGetByNameRequest
	(*WifiProfileServiceGetByNameResponse)(nil),                 // 7: tti.gateway.controller.northbound.v1.WifiProfileServiceGetByNameResponse
	(*WifiProfileServiceUpdateRequest)(nil),                     // 8: tti.gateway.controller.northbound.v1.WifiProfileServiceUpdateRequest
	(*WifiProfileServiceUpdateResponse)(nil),                    // 9: tti.gateway.controller.northbound.v1.WifiProfileServiceUpdateResponse
	(*WifiProfileServiceDeleteRequest)(nil),                     // 10: tti.gateway.controller.northbound.v1.WifiProfileServiceDeleteRequest
	(*WifiProfileServiceDeleteResponse)(nil),                    // 11: tti.gateway.controller.northbound.v1.WifiProfileServiceDeleteResponse
	(*EthernetProfileServiceCreateRequest)(nil),                 // 12: tti.gateway.controller.northbound.v1.EthernetProfileServiceCreateRequest
	(*EthernetProfileServiceCreateResponse)(nil),                // 13: tti.gateway.controller.northbound.v1.EthernetProfileServiceCreateResponse
	(*EthernetProfileServiceListRequest)(nil),                   // 14: tti.gateway.controller.northbound.v1.EthernetProfileServiceListRequest
	(*EthernetProfileServiceListResponse)(nil),                  // 15: tti.gateway.controller.northbound.v1.EthernetProfileServiceListResponse
	(*EthernetProfileServiceGetRequest)(nil),                    // 16: tti.gateway.controller.northbound.v1.EthernetProfileServiceGetRequest
	(*EthernetProfileServiceGetResponse)(nil),                   // 17: tti.gateway.controller.northbound.v1.EthernetProfileServiceGetResponse
	(*EthernetProfileServiceGetByNameRequest)(nil),              // 18: tti.gateway.controller.northbound.v1.EthernetProfileServiceGetByNameRequest
	(*EthernetProfileServiceGetByNameResponse)(nil),             // 19: tti.gateway.controller.northbound.v1.EthernetProfileServiceGetByNameResponse
	(*EthernetProfileServiceUpdateRequest)(nil),                 // 20: tti.gateway.controller.northbound.v1.EthernetProfileServiceUpdateRequest
	(*EthernetProfileServiceUpdateResponse)(nil),                // 21: tti.gateway.controller.northbound.v1.EthernetProfileServiceUpdateResponse
	(*EthernetProfileServiceDeleteRequest)(nil),                 // 22: tti.gateway.controller.northbound.v1.EthernetProfileServiceDeleteRequest
	(*EthernetProfileServiceDeleteResponse)(nil),                // 23: tti.gateway.controller.northbound.v1.EthernetProfileServiceDeleteResponse
	(*GeolocationProfileServiceCreateRequest)(nil),              // 24: tti.gateway.controller.northbound.v1.GeolocationProfileServiceCreateRequest
	(*GeolocationProfileServiceCreateResponse)(nil),             // 25: tti.gateway.controller.northbound.v1.GeolocationProfileServiceCreateResponse
	(*GeolocationProfileServiceListRequest)(nil),                // 26: tti.gateway.controller.northbound.v1.GeolocationProfileServiceListRequest
	(*GeolocationProfileServiceListResponse)(nil),               // 27: tti.gateway.controller.northbound.v1.GeolocationProfileServiceListResponse
	(*GeolocationProfileServiceGetRequest)(nil),                 // 28: tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetRequest
	(*GeolocationProfileServiceGetResponse)(nil),                // 29: tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetResponse
	(*GeolocationProfileServiceGetByNameRequest)(nil),           // 30: tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetByNameRequest
	(*GeolocationProfileServiceGetByNameResponse)(nil),          // 31: tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetByNameResponse
	(*GeolocationProfileServiceUpdateRequest)(nil),              // 32: tti.gateway.controller.northbound.v1.GeolocationProfileServiceUpdateRequest
	(*GeolocationProfileServiceUpdateResponse)(nil),             // 33: tti.gateway.controller.northbound.v1.GeolocationProfileServiceUpdateResponse
	(*GeolocationProfileServiceDeleteRequest)(nil),              // 34: tti.gateway.controller.northbound.v1.GeolocationProfileServiceDeleteRequest
	(*GeolocationProfileServiceDeleteResponse)(nil),             // 35: tti.gateway.controller.northbound.v1.GeolocationProfileServiceDeleteResponse
	(*LoraPacketForwarderProfileServiceCreateRequest)(nil),      // 36: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceCreateRequest
	(*LoraPacketForwarderProfileServiceCreateResponse)(nil),     // 37: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceCreateResponse
	(*LoraPacketForwarderProfileServiceListRequest)(nil),        // 38: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceListRequest
	(*LoraPacketForwarderProfileServiceListResponse)(nil),       // 39: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceListResponse
	(*LoraPacketForwarderProfileServiceGetRequest)(nil),         // 40: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetRequest
	(*LoraPacketForwarderProfileServiceGetResponse)(nil),        // 41: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetResponse
	(*LoraPacketForwarderProfileServiceGetByNameRequest)(nil),   // 42: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetByNameRequest
	(*LoraPacketForwarderProfileServiceGetByNameResponse)(nil),  // 43: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetByNameResponse
	(*LoraPacketForwarderProfileServiceUpdateRequest)(nil),      // 44: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceUpdateRequest
	(*LoraPacketForwarderProfileServiceUpdateResponse)(nil),     // 45: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceUpdateResponse
	(*LoraPacketForwarderProfileServiceDeleteRequest)(nil),      // 46: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceDeleteRequest
	(*LoraPacketForwarderProfileServiceDeleteResponse)(nil),     // 47: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceDeleteResponse
	(*WifiProfileServiceListResponse_Entry)(nil),                // 48: tti.gateway.controller.northbound.v1.WifiProfileServiceListResponse.Entry
	(*EthernetProfileServiceListResponse_Entry)(nil),            // 49: tti.gateway.controller.northbound.v1.EthernetProfileServiceListResponse.Entry
	(*GeolocationProfileServiceListResponse_Entry)(nil),         // 50: tti.gateway.controller.northbound.v1.GeolocationProfileServiceListResponse.Entry
	(*LoraPacketForwarderProfileServiceListResponse_Entry)(nil), // 51: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceListResponse.Entry
	(*WifiProfile)(nil),                                         // 52: tti.gateway.controller.northbound.v1.WifiProfile
	(*EthernetProfile)(nil),                                     // 53: tti.gateway.controller.northbound.v1.EthernetProfile
	(*GeolocationProfile)(nil),                                  // 54: tti.gateway.controller.northbound.v1.GeolocationProfile
	(*LoraPacketForwarderProfile)(nil),                          // 55: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfile
}
var file_tti_gateway_controller_northbound_v1_profile_services_proto_depIdxs = []int32{
	52, // 0: tti.gateway.controller.northbound.v1.WifiProfileServiceCreateRequest.wifi_profile:type_name -> tti.gateway.controller.northbound.v1.WifiProfile
	48, // 1: tti.gateway.controller.northbound.v1.WifiProfileServiceListResponse.entries:type_name -> tti.gateway.controller.northbound.v1.WifiProfileServiceListResponse.Entry
	52, // 2: tti.gateway.controller.northbound.v1.WifiProfileServiceGetResponse.wifi_profile:type_name -> tti.gateway.controller.northbound.v1.WifiProfile
	52, // 3: tti.gateway.controller.northbound.v1.WifiProfileServiceGetByNameResponse.wifi_profile:type_name -> tti.gateway.controller.northbound.v1.WifiProfile
	52, // 4: tti.gateway.controller.northbound.v1.WifiProfileServiceUpdateRequest.wifi_profile:type_name -> tti.gateway.controller.northbound.v1.WifiProfile
	53, // 5: tti.gateway.controller.northbound.v1.EthernetProfileServiceCreateRequest.ethernet_profile:type_name -> tti.gateway.controller.northbound.v1.EthernetProfile
	49, // 6: tti.gateway.controller.northbound.v1.EthernetProfileServiceListResponse.entries:type_name -> tti.gateway.controller.northbound.v1.EthernetProfileServiceListResponse.Entry
	53, // 7: tti.gateway.controller.northbound.v1.EthernetProfileServiceGetResponse.ethernet_profile:type_name -> tti.gateway.controller.northbound.v1.EthernetProfile
	53, // 8: tti.gateway.controller.northbound.v1.EthernetProfileServiceGetByNameResponse.ethernet_profile:type_name -> tti.gateway.controller.northbound.v1.EthernetProfile
	53, // 9: tti.gateway.controller.northbound.v1.EthernetProfileServiceUpdateRequest.ethernet_profile:type_name -> tti.gateway.controller.northbound.v1.EthernetProfile
	54, // 10: tti.gateway.controller.northbound.v1.GeolocationProfileServiceCreateRequest.geolocation_profile:type_name -> tti.gateway.controller.northbound.v1.GeolocationProfile
	50, // 11: tti.gateway.controller.northbound.v1.GeolocationProfileServiceListResponse.entries:type_name -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceListResponse.Entry
	54, // 12: tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetResponse.geolocation_profile:type_name -> tti.gateway.controller.northbound.v1.GeolocationProfile
	54, // 13: tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetByNameResponse.geolocation_profile:type_name -> tti.gateway.controller.northbound.v1.GeolocationProfile
	54, // 14: tti.gateway.controller.northbound.v1.GeolocationProfileServiceUpdateRequest.geolocation_profile:type_name -> tti.gateway.controller.northbound.v1.GeolocationProfile
	55, // 15: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceCreateRequest.lora_packet_forwarder_profile:type_name -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfile
	51, // 16: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceListResponse.entries:type_name -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceListResponse.Entry
	55, // 17: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetResponse.lora_packet_forwarder_profile:type_name -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfile
	55, // 18: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetByNameResponse.lora_packet_forwarder_profile:type_name -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfile
	55, // 19: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceUpdateRequest.lora_packet_forwarder_profile:type_name -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfile
	52, // 20: tti.gateway.controller.northbound.v1.WifiProfileServiceListResponse.Entry.wifi_profile:type_name -> tti.gateway.controller.northbound.v1.WifiProfile
	53, // 21: tti.gateway.controller.northbound.v1.EthernetProfileServiceListResponse.Entry.ethernet_profile:type_name -> tti.gateway.controller.northbound.v1.EthernetProfile
	54, // 22: tti.gateway.controller.northbound.v1.GeolocationProfileServiceListResponse.Entry.geolocation_profile:type_name -> tti.gateway.controller.northbound.v1.GeolocationProfile
	55, // 23: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceListResponse.Entry.lora_packet_forwarder_profile:type_name -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfile
	0,  // 24: tti.gateway.controller.northbound.v1.WifiProfileService.Create:input_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceCreateRequest
	2,  // 25: tti.gateway.controller.northbound.v1.WifiProfileService.List:input_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceListRequest
	4,  // 26: tti.gateway.controller.northbound.v1.WifiProfileService.Get:input_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceGetRequest
	6,  // 27: tti.gateway.controller.northbound.v1.WifiProfileService.GetByName:input_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceGetByNameRequest
	8,  // 28: tti.gateway.controller.northbound.v1.WifiProfileService.Update:input_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceUpdateRequest
	10, // 29: tti.gateway.controller.northbound.v1.WifiProfileService.Delete:input_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceDeleteRequest
	12, // 30: tti.gateway.controller.northbound.v1.EthernetProfileService.Create:input_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceCreateRequest
	14, // 31: tti.gateway.controller.northbound.v1.EthernetProfileService.List:input_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceListRequest
	16, // 32: tti.gateway.controller.northbound.v1.EthernetProfileService.Get:input_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceGetRequest
	18, // 33: tti.gateway.controller.northbound.v1.EthernetProfileService.GetByName:input_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceGetByNameRequest
	20, // 34: tti.gateway.controller.northbound.v1.EthernetProfileService.Update:input_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceUpdateRequest
	22, // 35: tti.gateway.controller.northbound.v1.EthernetProfileService.Delete:input_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceDeleteRequest
	24, // 36: tti.gateway.controller.northbound.v1.GeolocationProfileService.Create:input_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceCreateRequest
	26, // 37: tti.gateway.controller.northbound.v1.GeolocationProfileService.List:input_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceListRequest
	28, // 38: tti.gateway.controller.northbound.v1.GeolocationProfileService.Get:input_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetRequest
	30, // 39: tti.gateway.controller.northbound.v1.GeolocationProfileService.GetByName:input_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetByNameRequest
	32, // 40: tti.gateway.controller.northbound.v1.GeolocationProfileService.Update:input_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceUpdateRequest
	34, // 41: tti.gateway.controller.northbound.v1.GeolocationProfileService.Delete:input_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceDeleteRequest
	36, // 42: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.Create:input_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceCreateRequest
	38, // 43: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.List:input_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceListRequest
	40, // 44: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.Get:input_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetRequest
	42, // 45: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.GetByName:input_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetByNameRequest
	44, // 46: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.Update:input_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceUpdateRequest
	46, // 47: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.Delete:input_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceDeleteRequest
	1,  // 48: tti.gateway.controller.northbound.v1.WifiProfileService.Create:output_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceCreateResponse
	3,  // 49: tti.gateway.controller.northbound.v1.WifiProfileService.List:output_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceListResponse
	5,  // 50: tti.gateway.controller.northbound.v1.WifiProfileService.Get:output_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceGetResponse
	7,  // 51: tti.gateway.controller.northbound.v1.WifiProfileService.GetByName:output_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceGetByNameResponse
	9,  // 52: tti.gateway.controller.northbound.v1.WifiProfileService.Update:output_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceUpdateResponse
	11, // 53: tti.gateway.controller.northbound.v1.WifiProfileService.Delete:output_type -> tti.gateway.controller.northbound.v1.WifiProfileServiceDeleteResponse
	13, // 54: tti.gateway.controller.northbound.v1.EthernetProfileService.Create:output_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceCreateResponse
	15, // 55: tti.gateway.controller.northbound.v1.EthernetProfileService.List:output_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceListResponse
	17, // 56: tti.gateway.controller.northbound.v1.EthernetProfileService.Get:output_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceGetResponse
	19, // 57: tti.gateway.controller.northbound.v1.EthernetProfileService.GetByName:output_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceGetByNameResponse
	21, // 58: tti.gateway.controller.northbound.v1.EthernetProfileService.Update:output_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceUpdateResponse
	23, // 59: tti.gateway.controller.northbound.v1.EthernetProfileService.Delete:output_type -> tti.gateway.controller.northbound.v1.EthernetProfileServiceDeleteResponse
	25, // 60: tti.gateway.controller.northbound.v1.GeolocationProfileService.Create:output_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceCreateResponse
	27, // 61: tti.gateway.controller.northbound.v1.GeolocationProfileService.List:output_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceListResponse
	29, // 62: tti.gateway.controller.northbound.v1.GeolocationProfileService.Get:output_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetResponse
	31, // 63: tti.gateway.controller.northbound.v1.GeolocationProfileService.GetByName:output_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceGetByNameResponse
	33, // 64: tti.gateway.controller.northbound.v1.GeolocationProfileService.Update:output_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceUpdateResponse
	35, // 65: tti.gateway.controller.northbound.v1.GeolocationProfileService.Delete:output_type -> tti.gateway.controller.northbound.v1.GeolocationProfileServiceDeleteResponse
	37, // 66: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.Create:output_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceCreateResponse
	39, // 67: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.List:output_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceListResponse
	41, // 68: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.Get:output_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetResponse
	43, // 69: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.GetByName:output_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceGetByNameResponse
	45, // 70: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.Update:output_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceUpdateResponse
	47, // 71: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileService.Delete:output_type -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProfileServiceDeleteResponse
	48, // [48:72] is the sub-list for method output_type
	24, // [24:48] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_tti_gateway_controller_northbound_v1_profile_services_proto_init() }
func file_tti_gateway_controller_northbound_v1_profile_services_proto_init() {
	if File_tti_gateway_controller_northbound_v1_profile_services_proto != nil {
		return
	}
	file_tti_gateway_controller_northbound_v1_profiles_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceGetByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceGetByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceGetByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceGetByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceGetByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceGetByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceGetByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceGetByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfileServiceListResponse_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfileServiceListResponse_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfileServiceListResponse_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfileServiceListResponse_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_tti_gateway_controller_northbound_v1_profile_services_proto_goTypes,
		DependencyIndexes: file_tti_gateway_controller_northbound_v1_profile_services_proto_depIdxs,
		MessageInfos:      file_tti_gateway_controller_northbound_v1_profile_services_proto_msgTypes,
	}.Build()
	File_tti_gateway_controller_northbound_v1_profile_services_proto = out.File
	file_tti_gateway_controller_northbound_v1_profile_services_proto_rawDesc = nil
	file_tti_gateway_controller_northbound_v1_profile_services_proto_goTypes = nil
	file_tti_gateway_controller_northbound_v1_profile_services_proto_depIdxs = nil
}
