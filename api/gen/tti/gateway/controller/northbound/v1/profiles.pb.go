// Copyright Â© 2024 The Things Industries B.V.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: tti/gateway/controller/northbound/v1/profiles.proto

package northboundv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WifiProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName               string                     `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Shared                    bool                       `protobuf:"varint,2,opt,name=shared,proto3" json:"shared,omitempty"`
	Ssid                      string                     `protobuf:"bytes,3,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Password                  string                     `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	NetworkInterfaceAddresses *NetworkInterfaceAddresses `protobuf:"bytes,5,opt,name=network_interface_addresses,json=networkInterfaceAddresses,proto3" json:"network_interface_addresses,omitempty"`
}

func (x *WifiProfile) Reset() {
	*x = WifiProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiProfile) ProtoMessage() {}

func (x *WifiProfile) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiProfile.ProtoReflect.Descriptor instead.
func (*WifiProfile) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescGZIP(), []int{0}
}

func (x *WifiProfile) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *WifiProfile) GetShared() bool {
	if x != nil {
		return x.Shared
	}
	return false
}

func (x *WifiProfile) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiProfile) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *WifiProfile) GetNetworkInterfaceAddresses() *NetworkInterfaceAddresses {
	if x != nil {
		return x.NetworkInterfaceAddresses
	}
	return nil
}

type EthernetProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName               string                     `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Shared                    bool                       `protobuf:"varint,2,opt,name=shared,proto3" json:"shared,omitempty"`
	NetworkInterfaceAddresses *NetworkInterfaceAddresses `protobuf:"bytes,3,opt,name=network_interface_addresses,json=networkInterfaceAddresses,proto3" json:"network_interface_addresses,omitempty"`
}

func (x *EthernetProfile) Reset() {
	*x = EthernetProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthernetProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthernetProfile) ProtoMessage() {}

func (x *EthernetProfile) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthernetProfile.ProtoReflect.Descriptor instead.
func (*EthernetProfile) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescGZIP(), []int{1}
}

func (x *EthernetProfile) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *EthernetProfile) GetShared() bool {
	if x != nil {
		return x.Shared
	}
	return false
}

func (x *EthernetProfile) GetNetworkInterfaceAddresses() *NetworkInterfaceAddresses {
	if x != nil {
		return x.NetworkInterfaceAddresses
	}
	return nil
}

type GeolocationProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName     string               `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Shared          bool                 `protobuf:"varint,2,opt,name=shared,proto3" json:"shared,omitempty"`
	DisconnectedFor *durationpb.Duration `protobuf:"bytes,3,opt,name=disconnected_for,json=disconnectedFor,proto3" json:"disconnected_for,omitempty"`
	Interval        *durationpb.Duration `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *GeolocationProfile) Reset() {
	*x = GeolocationProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeolocationProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeolocationProfile) ProtoMessage() {}

func (x *GeolocationProfile) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeolocationProfile.ProtoReflect.Descriptor instead.
func (*GeolocationProfile) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescGZIP(), []int{2}
}

func (x *GeolocationProfile) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *GeolocationProfile) GetShared() bool {
	if x != nil {
		return x.Shared
	}
	return false
}

func (x *GeolocationProfile) GetDisconnectedFor() *durationpb.Duration {
	if x != nil {
		return x.DisconnectedFor
	}
	return nil
}

func (x *GeolocationProfile) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

type LoraPacketForwarderProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName string                      `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Shared      bool                        `protobuf:"varint,2,opt,name=shared,proto3" json:"shared,omitempty"`
	Protocol    LoraPacketForwarderProtocol `protobuf:"varint,3,opt,name=protocol,proto3,enum=tti.gateway.controller.northbound.v1.LoraPacketForwarderProtocol" json:"protocol,omitempty"`
	Address     string                      `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// DER encoded root CA certificate.
	RootCa []byte `protobuf:"bytes,5,opt,name=root_ca,json=rootCa,proto3" json:"root_ca,omitempty"`
}

func (x *LoraPacketForwarderProfile) Reset() {
	*x = LoraPacketForwarderProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderProfile) ProtoMessage() {}

func (x *LoraPacketForwarderProfile) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderProfile.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderProfile) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescGZIP(), []int{3}
}

func (x *LoraPacketForwarderProfile) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *LoraPacketForwarderProfile) GetShared() bool {
	if x != nil {
		return x.Shared
	}
	return false
}

func (x *LoraPacketForwarderProfile) GetProtocol() LoraPacketForwarderProtocol {
	if x != nil {
		return x.Protocol
	}
	return LoraPacketForwarderProtocol_LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED
}

func (x *LoraPacketForwarderProfile) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LoraPacketForwarderProfile) GetRootCa() []byte {
	if x != nil {
		return x.RootCa
	}
	return nil
}

var File_tti_gateway_controller_northbound_v1_profiles_proto protoreflect.FileDescriptor

var file_tti_gateway_controller_northbound_v1_profiles_proto_rawDesc = []byte{
	0x0a, 0x33, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f,
	0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x0b,
	0x57, 0x69, 0x66, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x20, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x40, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x7f, 0x0a, 0x1b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x19, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x12, 0x7f, 0x0a, 0x1b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e,
	0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x19, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x22, 0xd7, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x44,
	0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x46, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x97, 0x02, 0x0a, 0x1a,
	0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x12, 0x6a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x41, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x82, 0x01, 0x05, 0x10, 0x01, 0x22,
	0x01, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x24, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba,
	0x48, 0x07, 0x72, 0x05, 0x18, 0x64, 0x80, 0x02, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x21, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x08, 0xba, 0x48, 0x05, 0x7a, 0x03, 0x18, 0x80, 0x18, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x74, 0x43, 0x61, 0x42, 0xc1, 0x02, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x74,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x42, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x72, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x54, 0x47, 0x43, 0x4e, 0xaa, 0x02, 0x24,
	0x54, 0x74, 0x69, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x24, 0x54, 0x74, 0x69, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x4e, 0x6f,
	0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x30, 0x54, 0x74,
	0x69, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x28, 0x54, 0x74, 0x69, 0x3a, 0x3a, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x3a, 0x3a, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x3a, 0x3a, 0x4e, 0x6f, 0x72, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescOnce sync.Once
	file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescData = file_tti_gateway_controller_northbound_v1_profiles_proto_rawDesc
)

func file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescGZIP() []byte {
	file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescOnce.Do(func() {
		file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescData = protoimpl.X.CompressGZIP(file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescData)
	})
	return file_tti_gateway_controller_northbound_v1_profiles_proto_rawDescData
}

var file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tti_gateway_controller_northbound_v1_profiles_proto_goTypes = []interface{}{
	(*WifiProfile)(nil),                // 0: tti.gateway.controller.northbound.v1.WifiProfile
	(*EthernetProfile)(nil),            // 1: tti.gateway.controller.northbound.v1.EthernetProfile
	(*GeolocationProfile)(nil),         // 2: tti.gateway.controller.northbound.v1.GeolocationProfile
	(*LoraPacketForwarderProfile)(nil), // 3: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfile
	(*NetworkInterfaceAddresses)(nil),  // 4: tti.gateway.controller.northbound.v1.NetworkInterfaceAddresses
	(*durationpb.Duration)(nil),        // 5: google.protobuf.Duration
	(LoraPacketForwarderProtocol)(0),   // 6: tti.gateway.controller.northbound.v1.LoraPacketForwarderProtocol
}
var file_tti_gateway_controller_northbound_v1_profiles_proto_depIdxs = []int32{
	4, // 0: tti.gateway.controller.northbound.v1.WifiProfile.network_interface_addresses:type_name -> tti.gateway.controller.northbound.v1.NetworkInterfaceAddresses
	4, // 1: tti.gateway.controller.northbound.v1.EthernetProfile.network_interface_addresses:type_name -> tti.gateway.controller.northbound.v1.NetworkInterfaceAddresses
	5, // 2: tti.gateway.controller.northbound.v1.GeolocationProfile.disconnected_for:type_name -> google.protobuf.Duration
	5, // 3: tti.gateway.controller.northbound.v1.GeolocationProfile.interval:type_name -> google.protobuf.Duration
	6, // 4: tti.gateway.controller.northbound.v1.LoraPacketForwarderProfile.protocol:type_name -> tti.gateway.controller.northbound.v1.LoraPacketForwarderProtocol
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_tti_gateway_controller_northbound_v1_profiles_proto_init() }
func file_tti_gateway_controller_northbound_v1_profiles_proto_init() {
	if File_tti_gateway_controller_northbound_v1_profiles_proto != nil {
		return
	}
	file_tti_gateway_controller_northbound_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthernetProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeolocationProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tti_gateway_controller_northbound_v1_profiles_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tti_gateway_controller_northbound_v1_profiles_proto_goTypes,
		DependencyIndexes: file_tti_gateway_controller_northbound_v1_profiles_proto_depIdxs,
		MessageInfos:      file_tti_gateway_controller_northbound_v1_profiles_proto_msgTypes,
	}.Build()
	File_tti_gateway_controller_northbound_v1_profiles_proto = out.File
	file_tti_gateway_controller_northbound_v1_profiles_proto_rawDesc = nil
	file_tti_gateway_controller_northbound_v1_profiles_proto_goTypes = nil
	file_tti_gateway_controller_northbound_v1_profiles_proto_depIdxs = nil
}
