// Copyright Â© 2024 The Things Industries B.V.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: tti/gateway/controller/southbound/v1/messages.proto

package southboundv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkInterfaceType int32

const (
	NetworkInterfaceType_NETWORK_INTERFACE_TYPE_UNSPECIFIED NetworkInterfaceType = 0
	NetworkInterfaceType_NETWORK_INTERFACE_TYPE_CELLULAR    NetworkInterfaceType = 1
	NetworkInterfaceType_NETWORK_INTERFACE_TYPE_WIFI        NetworkInterfaceType = 2
	NetworkInterfaceType_NETWORK_INTERFACE_TYPE_ETHERNET    NetworkInterfaceType = 3
)

// Enum value maps for NetworkInterfaceType.
var (
	NetworkInterfaceType_name = map[int32]string{
		0: "NETWORK_INTERFACE_TYPE_UNSPECIFIED",
		1: "NETWORK_INTERFACE_TYPE_CELLULAR",
		2: "NETWORK_INTERFACE_TYPE_WIFI",
		3: "NETWORK_INTERFACE_TYPE_ETHERNET",
	}
	NetworkInterfaceType_value = map[string]int32{
		"NETWORK_INTERFACE_TYPE_UNSPECIFIED": 0,
		"NETWORK_INTERFACE_TYPE_CELLULAR":    1,
		"NETWORK_INTERFACE_TYPE_WIFI":        2,
		"NETWORK_INTERFACE_TYPE_ETHERNET":    3,
	}
)

func (x NetworkInterfaceType) Enum() *NetworkInterfaceType {
	p := new(NetworkInterfaceType)
	*p = x
	return p
}

func (x NetworkInterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkInterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes[0].Descriptor()
}

func (NetworkInterfaceType) Type() protoreflect.EnumType {
	return &file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes[0]
}

func (x NetworkInterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkInterfaceType.Descriptor instead.
func (NetworkInterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{0}
}

type NetworkInterfaceStatus int32

const (
	NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_UNSPECIFIED NetworkInterfaceStatus = 0
	NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_DOWN        NetworkInterfaceStatus = 1
	NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_UP          NetworkInterfaceStatus = 2
	NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_FAILED      NetworkInterfaceStatus = 3
)

// Enum value maps for NetworkInterfaceStatus.
var (
	NetworkInterfaceStatus_name = map[int32]string{
		0: "NETWORK_INTERFACE_STATUS_UNSPECIFIED",
		1: "NETWORK_INTERFACE_STATUS_DOWN",
		2: "NETWORK_INTERFACE_STATUS_UP",
		3: "NETWORK_INTERFACE_STATUS_FAILED",
	}
	NetworkInterfaceStatus_value = map[string]int32{
		"NETWORK_INTERFACE_STATUS_UNSPECIFIED": 0,
		"NETWORK_INTERFACE_STATUS_DOWN":        1,
		"NETWORK_INTERFACE_STATUS_UP":          2,
		"NETWORK_INTERFACE_STATUS_FAILED":      3,
	}
)

func (x NetworkInterfaceStatus) Enum() *NetworkInterfaceStatus {
	p := new(NetworkInterfaceStatus)
	*p = x
	return p
}

func (x NetworkInterfaceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkInterfaceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes[1].Descriptor()
}

func (NetworkInterfaceStatus) Type() protoreflect.EnumType {
	return &file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes[1]
}

func (x NetworkInterfaceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkInterfaceStatus.Descriptor instead.
func (NetworkInterfaceStatus) EnumDescriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{1}
}

type WifiAuthenticationMode int32

const (
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_UNSPECIFIED             WifiAuthenticationMode = 0
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_OPEN                    WifiAuthenticationMode = 1
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WEP                     WifiAuthenticationMode = 2
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA_PSK                 WifiAuthenticationMode = 3
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA2_PSK                WifiAuthenticationMode = 4
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA_WPA2_PSK            WifiAuthenticationMode = 5
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA2_ENTERPRISE         WifiAuthenticationMode = 6
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA3_PSK                WifiAuthenticationMode = 7
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA2_WPA3_PSK           WifiAuthenticationMode = 8
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WAPI_PSK                WifiAuthenticationMode = 9
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_OWE                     WifiAuthenticationMode = 10
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA3_ENT_192            WifiAuthenticationMode = 11
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA3_EXT_PSK            WifiAuthenticationMode = 12
	WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_WPA3_EXT_PSK_MIXED_MODE WifiAuthenticationMode = 13
)

// Enum value maps for WifiAuthenticationMode.
var (
	WifiAuthenticationMode_name = map[int32]string{
		0:  "WIFI_AUTHENTICATION_MODE_UNSPECIFIED",
		1:  "WIFI_AUTHENTICATION_MODE_OPEN",
		2:  "WIFI_AUTHENTICATION_MODE_WEP",
		3:  "WIFI_AUTHENTICATION_MODE_WPA_PSK",
		4:  "WIFI_AUTHENTICATION_MODE_WPA2_PSK",
		5:  "WIFI_AUTHENTICATION_MODE_WPA_WPA2_PSK",
		6:  "WIFI_AUTHENTICATION_MODE_WPA2_ENTERPRISE",
		7:  "WIFI_AUTHENTICATION_MODE_WPA3_PSK",
		8:  "WIFI_AUTHENTICATION_MODE_WPA2_WPA3_PSK",
		9:  "WIFI_AUTHENTICATION_MODE_WAPI_PSK",
		10: "WIFI_AUTHENTICATION_MODE_OWE",
		11: "WIFI_AUTHENTICATION_MODE_WPA3_ENT_192",
		12: "WIFI_AUTHENTICATION_MODE_WPA3_EXT_PSK",
		13: "WIFI_AUTHENTICATION_MODE_WPA3_EXT_PSK_MIXED_MODE",
	}
	WifiAuthenticationMode_value = map[string]int32{
		"WIFI_AUTHENTICATION_MODE_UNSPECIFIED":             0,
		"WIFI_AUTHENTICATION_MODE_OPEN":                    1,
		"WIFI_AUTHENTICATION_MODE_WEP":                     2,
		"WIFI_AUTHENTICATION_MODE_WPA_PSK":                 3,
		"WIFI_AUTHENTICATION_MODE_WPA2_PSK":                4,
		"WIFI_AUTHENTICATION_MODE_WPA_WPA2_PSK":            5,
		"WIFI_AUTHENTICATION_MODE_WPA2_ENTERPRISE":         6,
		"WIFI_AUTHENTICATION_MODE_WPA3_PSK":                7,
		"WIFI_AUTHENTICATION_MODE_WPA2_WPA3_PSK":           8,
		"WIFI_AUTHENTICATION_MODE_WAPI_PSK":                9,
		"WIFI_AUTHENTICATION_MODE_OWE":                     10,
		"WIFI_AUTHENTICATION_MODE_WPA3_ENT_192":            11,
		"WIFI_AUTHENTICATION_MODE_WPA3_EXT_PSK":            12,
		"WIFI_AUTHENTICATION_MODE_WPA3_EXT_PSK_MIXED_MODE": 13,
	}
)

func (x WifiAuthenticationMode) Enum() *WifiAuthenticationMode {
	p := new(WifiAuthenticationMode)
	*p = x
	return p
}

func (x WifiAuthenticationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiAuthenticationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes[2].Descriptor()
}

func (WifiAuthenticationMode) Type() protoreflect.EnumType {
	return &file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes[2]
}

func (x WifiAuthenticationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiAuthenticationMode.Descriptor instead.
func (WifiAuthenticationMode) EnumDescriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{2}
}

type LoraPacketForwarderProtocol int32

const (
	LoraPacketForwarderProtocol_LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED LoraPacketForwarderProtocol = 0
	LoraPacketForwarderProtocol_LORA_PACKET_FORWARDER_PROTOCOL_TTIV1       LoraPacketForwarderProtocol = 1
)

// Enum value maps for LoraPacketForwarderProtocol.
var (
	LoraPacketForwarderProtocol_name = map[int32]string{
		0: "LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED",
		1: "LORA_PACKET_FORWARDER_PROTOCOL_TTIV1",
	}
	LoraPacketForwarderProtocol_value = map[string]int32{
		"LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED": 0,
		"LORA_PACKET_FORWARDER_PROTOCOL_TTIV1":       1,
	}
)

func (x LoraPacketForwarderProtocol) Enum() *LoraPacketForwarderProtocol {
	p := new(LoraPacketForwarderProtocol)
	*p = x
	return p
}

func (x LoraPacketForwarderProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoraPacketForwarderProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes[3].Descriptor()
}

func (LoraPacketForwarderProtocol) Type() protoreflect.EnumType {
	return &file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes[3]
}

func (x LoraPacketForwarderProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoraPacketForwarderProtocol.Descriptor instead.
func (LoraPacketForwarderProtocol) EnumDescriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{3}
}

type NetworkInterfaceAddresses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4Address    uint32   `protobuf:"fixed32,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv4SubnetMask uint32   `protobuf:"fixed32,2,opt,name=ipv4_subnet_mask,json=ipv4SubnetMask,proto3" json:"ipv4_subnet_mask,omitempty"`
	Ipv4Gateway    uint32   `protobuf:"fixed32,3,opt,name=ipv4_gateway,json=ipv4Gateway,proto3" json:"ipv4_gateway,omitempty"`
	Ipv6Address    []byte   `protobuf:"bytes,4,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Ipv4DnsServers []uint32 `protobuf:"fixed32,5,rep,packed,name=ipv4_dns_servers,json=ipv4DnsServers,proto3" json:"ipv4_dns_servers,omitempty"`
}

func (x *NetworkInterfaceAddresses) Reset() {
	*x = NetworkInterfaceAddresses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceAddresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceAddresses) ProtoMessage() {}

func (x *NetworkInterfaceAddresses) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceAddresses.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceAddresses) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkInterfaceAddresses) GetIpv4Address() uint32 {
	if x != nil {
		return x.Ipv4Address
	}
	return 0
}

func (x *NetworkInterfaceAddresses) GetIpv4SubnetMask() uint32 {
	if x != nil {
		return x.Ipv4SubnetMask
	}
	return 0
}

func (x *NetworkInterfaceAddresses) GetIpv4Gateway() uint32 {
	if x != nil {
		return x.Ipv4Gateway
	}
	return 0
}

func (x *NetworkInterfaceAddresses) GetIpv6Address() []byte {
	if x != nil {
		return x.Ipv6Address
	}
	return nil
}

func (x *NetworkInterfaceAddresses) GetIpv4DnsServers() []uint32 {
	if x != nil {
		return x.Ipv4DnsServers
	}
	return nil
}

type NetworkInterfaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      NetworkInterfaceStatus     `protobuf:"varint,1,opt,name=status,proto3,enum=tti.gateway.controller.southbound.v1.NetworkInterfaceStatus" json:"status,omitempty"`
	DhcpEnabled bool                       `protobuf:"varint,2,opt,name=dhcp_enabled,json=dhcpEnabled,proto3" json:"dhcp_enabled,omitempty"`
	Addresses   *NetworkInterfaceAddresses `protobuf:"bytes,3,opt,name=addresses,proto3" json:"addresses,omitempty"`
	// Types that are assignable to Type:
	//
	//	*NetworkInterfaceInfo_Cellular_
	//	*NetworkInterfaceInfo_Wifi_
	//	*NetworkInterfaceInfo_Ethernet_
	Type isNetworkInterfaceInfo_Type `protobuf_oneof:"type"`
}

func (x *NetworkInterfaceInfo) Reset() {
	*x = NetworkInterfaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceInfo) ProtoMessage() {}

func (x *NetworkInterfaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceInfo.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceInfo) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkInterfaceInfo) GetStatus() NetworkInterfaceStatus {
	if x != nil {
		return x.Status
	}
	return NetworkInterfaceStatus_NETWORK_INTERFACE_STATUS_UNSPECIFIED
}

func (x *NetworkInterfaceInfo) GetDhcpEnabled() bool {
	if x != nil {
		return x.DhcpEnabled
	}
	return false
}

func (x *NetworkInterfaceInfo) GetAddresses() *NetworkInterfaceAddresses {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (m *NetworkInterfaceInfo) GetType() isNetworkInterfaceInfo_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *NetworkInterfaceInfo) GetCellular() *NetworkInterfaceInfo_Cellular {
	if x, ok := x.GetType().(*NetworkInterfaceInfo_Cellular_); ok {
		return x.Cellular
	}
	return nil
}

func (x *NetworkInterfaceInfo) GetWifi() *NetworkInterfaceInfo_Wifi {
	if x, ok := x.GetType().(*NetworkInterfaceInfo_Wifi_); ok {
		return x.Wifi
	}
	return nil
}

func (x *NetworkInterfaceInfo) GetEthernet() *NetworkInterfaceInfo_Ethernet {
	if x, ok := x.GetType().(*NetworkInterfaceInfo_Ethernet_); ok {
		return x.Ethernet
	}
	return nil
}

type isNetworkInterfaceInfo_Type interface {
	isNetworkInterfaceInfo_Type()
}

type NetworkInterfaceInfo_Cellular_ struct {
	Cellular *NetworkInterfaceInfo_Cellular `protobuf:"bytes,4,opt,name=cellular,proto3,oneof"`
}

type NetworkInterfaceInfo_Wifi_ struct {
	Wifi *NetworkInterfaceInfo_Wifi `protobuf:"bytes,5,opt,name=wifi,proto3,oneof"`
}

type NetworkInterfaceInfo_Ethernet_ struct {
	Ethernet *NetworkInterfaceInfo_Ethernet `protobuf:"bytes,6,opt,name=ethernet,proto3,oneof"`
}

func (*NetworkInterfaceInfo_Cellular_) isNetworkInterfaceInfo_Type() {}

func (*NetworkInterfaceInfo_Wifi_) isNetworkInterfaceInfo_Type() {}

func (*NetworkInterfaceInfo_Ethernet_) isNetworkInterfaceInfo_Type() {}

type NetworkPerformanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*NetworkPerformanceInfo_Cellular_
	//	*NetworkPerformanceInfo_Wifi_
	//	*NetworkPerformanceInfo_Ethernet_
	Type isNetworkPerformanceInfo_Type `protobuf_oneof:"type"`
}

func (x *NetworkPerformanceInfo) Reset() {
	*x = NetworkPerformanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPerformanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPerformanceInfo) ProtoMessage() {}

func (x *NetworkPerformanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPerformanceInfo.ProtoReflect.Descriptor instead.
func (*NetworkPerformanceInfo) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{2}
}

func (m *NetworkPerformanceInfo) GetType() isNetworkPerformanceInfo_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *NetworkPerformanceInfo) GetCellular() *NetworkPerformanceInfo_Cellular {
	if x, ok := x.GetType().(*NetworkPerformanceInfo_Cellular_); ok {
		return x.Cellular
	}
	return nil
}

func (x *NetworkPerformanceInfo) GetWifi() *NetworkPerformanceInfo_Wifi {
	if x, ok := x.GetType().(*NetworkPerformanceInfo_Wifi_); ok {
		return x.Wifi
	}
	return nil
}

func (x *NetworkPerformanceInfo) GetEthernet() *NetworkPerformanceInfo_Ethernet {
	if x, ok := x.GetType().(*NetworkPerformanceInfo_Ethernet_); ok {
		return x.Ethernet
	}
	return nil
}

type isNetworkPerformanceInfo_Type interface {
	isNetworkPerformanceInfo_Type()
}

type NetworkPerformanceInfo_Cellular_ struct {
	Cellular *NetworkPerformanceInfo_Cellular `protobuf:"bytes,1,opt,name=cellular,proto3,oneof"`
}

type NetworkPerformanceInfo_Wifi_ struct {
	Wifi *NetworkPerformanceInfo_Wifi `protobuf:"bytes,2,opt,name=wifi,proto3,oneof"`
}

type NetworkPerformanceInfo_Ethernet_ struct {
	Ethernet *NetworkPerformanceInfo_Ethernet `protobuf:"bytes,3,opt,name=ethernet,proto3,oneof"`
}

func (*NetworkPerformanceInfo_Cellular_) isNetworkPerformanceInfo_Type() {}

func (*NetworkPerformanceInfo_Wifi_) isNetworkPerformanceInfo_Type() {}

func (*NetworkPerformanceInfo_Ethernet_) isNetworkPerformanceInfo_Type() {}

type ClientHelloNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uptime *durationpb.Duration `protobuf:"bytes,1,opt,name=uptime,proto3" json:"uptime,omitempty"`
	// Organizationally Unique Identifier (OUI) assigned by IEEE.
	DeviceManufacturer   uint32                            `protobuf:"varint,2,opt,name=device_manufacturer,json=deviceManufacturer,proto3" json:"device_manufacturer,omitempty"`
	DeviceModel          string                            `protobuf:"bytes,3,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	HardwareVersion      string                            `protobuf:"bytes,4,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	RuntimeVersion       string                            `protobuf:"bytes,5,opt,name=runtime_version,json=runtimeVersion,proto3" json:"runtime_version,omitempty"`
	FirmwareVersion      string                            `protobuf:"bytes,6,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	NetworkInterfaceType NetworkInterfaceType              `protobuf:"varint,7,opt,name=network_interface_type,json=networkInterfaceType,proto3,enum=tti.gateway.controller.southbound.v1.NetworkInterfaceType" json:"network_interface_type,omitempty"`
	Cellular             *ClientHelloNotification_Cellular `protobuf:"bytes,8,opt,name=cellular,proto3" json:"cellular,omitempty"`
	Wifi                 *ClientHelloNotification_Wifi     `protobuf:"bytes,9,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Ethernet             *ClientHelloNotification_Ethernet `protobuf:"bytes,10,opt,name=ethernet,proto3" json:"ethernet,omitempty"`
}

func (x *ClientHelloNotification) Reset() {
	*x = ClientHelloNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientHelloNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHelloNotification) ProtoMessage() {}

func (x *ClientHelloNotification) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHelloNotification.ProtoReflect.Descriptor instead.
func (*ClientHelloNotification) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ClientHelloNotification) GetUptime() *durationpb.Duration {
	if x != nil {
		return x.Uptime
	}
	return nil
}

func (x *ClientHelloNotification) GetDeviceManufacturer() uint32 {
	if x != nil {
		return x.DeviceManufacturer
	}
	return 0
}

func (x *ClientHelloNotification) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *ClientHelloNotification) GetHardwareVersion() string {
	if x != nil {
		return x.HardwareVersion
	}
	return ""
}

func (x *ClientHelloNotification) GetRuntimeVersion() string {
	if x != nil {
		return x.RuntimeVersion
	}
	return ""
}

func (x *ClientHelloNotification) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

func (x *ClientHelloNotification) GetNetworkInterfaceType() NetworkInterfaceType {
	if x != nil {
		return x.NetworkInterfaceType
	}
	return NetworkInterfaceType_NETWORK_INTERFACE_TYPE_UNSPECIFIED
}

func (x *ClientHelloNotification) GetCellular() *ClientHelloNotification_Cellular {
	if x != nil {
		return x.Cellular
	}
	return nil
}

func (x *ClientHelloNotification) GetWifi() *ClientHelloNotification_Wifi {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *ClientHelloNotification) GetEthernet() *ClientHelloNotification_Ethernet {
	if x != nil {
		return x.Ethernet
	}
	return nil
}

type ServerHelloNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerHelloNotification) Reset() {
	*x = ServerHelloNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerHelloNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerHelloNotification) ProtoMessage() {}

func (x *ServerHelloNotification) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerHelloNotification.ProtoReflect.Descriptor instead.
func (*ServerHelloNotification) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{4}
}

type StatusNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System *StatusNotification_System `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
}

func (x *StatusNotification) Reset() {
	*x = StatusNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusNotification) ProtoMessage() {}

func (x *StatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusNotification.ProtoReflect.Descriptor instead.
func (*StatusNotification) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{5}
}

func (x *StatusNotification) GetSystem() *StatusNotification_System {
	if x != nil {
		return x.System
	}
	return nil
}

type NetworkInterfacesNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Network interfaces may be omitted if they haven't changed since the last notification.
	NetworkInterfaces []*NetworkInterfaceInfo `protobuf:"bytes,1,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
}

func (x *NetworkInterfacesNotification) Reset() {
	*x = NetworkInterfacesNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfacesNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfacesNotification) ProtoMessage() {}

func (x *NetworkInterfacesNotification) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfacesNotification.ProtoReflect.Descriptor instead.
func (*NetworkInterfacesNotification) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkInterfacesNotification) GetNetworkInterfaces() []*NetworkInterfaceInfo {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

type NetworkPerformancesNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Network performances may be omitted if they haven't changed since the last notification or they are not available.
	NetworkPerformances []*NetworkPerformanceInfo `protobuf:"bytes,1,rep,name=network_performances,json=networkPerformances,proto3" json:"network_performances,omitempty"`
}

func (x *NetworkPerformancesNotification) Reset() {
	*x = NetworkPerformancesNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPerformancesNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPerformancesNotification) ProtoMessage() {}

func (x *NetworkPerformancesNotification) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPerformancesNotification.ProtoReflect.Descriptor instead.
func (*NetworkPerformancesNotification) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkPerformancesNotification) GetNetworkPerformances() []*NetworkPerformanceInfo {
	if x != nil {
		return x.NetworkPerformances
	}
	return nil
}

type ScanWifiAccessPointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScanWifiAccessPointsRequest) Reset() {
	*x = ScanWifiAccessPointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanWifiAccessPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanWifiAccessPointsRequest) ProtoMessage() {}

func (x *ScanWifiAccessPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanWifiAccessPointsRequest.ProtoReflect.Descriptor instead.
func (*ScanWifiAccessPointsRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{8}
}

type ScanWifiAccessPointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessPoints []*ScanWifiAccessPointsResponse_AccessPoint `protobuf:"bytes,1,rep,name=access_points,json=accessPoints,proto3" json:"access_points,omitempty"`
}

func (x *ScanWifiAccessPointsResponse) Reset() {
	*x = ScanWifiAccessPointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanWifiAccessPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanWifiAccessPointsResponse) ProtoMessage() {}

func (x *ScanWifiAccessPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanWifiAccessPointsResponse.ProtoReflect.Descriptor instead.
func (*ScanWifiAccessPointsResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{9}
}

func (x *ScanWifiAccessPointsResponse) GetAccessPoints() []*ScanWifiAccessPointsResponse_AccessPoint {
	if x != nil {
		return x.AccessPoints
	}
	return nil
}

type ConfigureWifiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SSID of the WiFi network.
	// Set to empty to not connect to any network.
	Ssid     string                     `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Password string                     `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	StaticIp *NetworkInterfaceAddresses `protobuf:"bytes,3,opt,name=static_ip,json=staticIp,proto3" json:"static_ip,omitempty"`
}

func (x *ConfigureWifiRequest) Reset() {
	*x = ConfigureWifiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureWifiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureWifiRequest) ProtoMessage() {}

func (x *ConfigureWifiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureWifiRequest.ProtoReflect.Descriptor instead.
func (*ConfigureWifiRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigureWifiRequest) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *ConfigureWifiRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConfigureWifiRequest) GetStaticIp() *NetworkInterfaceAddresses {
	if x != nil {
		return x.StaticIp
	}
	return nil
}

type ConfigureWifiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureWifiResponse) Reset() {
	*x = ConfigureWifiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureWifiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureWifiResponse) ProtoMessage() {}

func (x *ConfigureWifiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureWifiResponse.ProtoReflect.Descriptor instead.
func (*ConfigureWifiResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{11}
}

type ConfigureEthernetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticIp *NetworkInterfaceAddresses `protobuf:"bytes,1,opt,name=static_ip,json=staticIp,proto3" json:"static_ip,omitempty"`
}

func (x *ConfigureEthernetRequest) Reset() {
	*x = ConfigureEthernetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureEthernetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureEthernetRequest) ProtoMessage() {}

func (x *ConfigureEthernetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureEthernetRequest.ProtoReflect.Descriptor instead.
func (*ConfigureEthernetRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigureEthernetRequest) GetStaticIp() *NetworkInterfaceAddresses {
	if x != nil {
		return x.StaticIp
	}
	return nil
}

type ConfigureEthernetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureEthernetResponse) Reset() {
	*x = ConfigureEthernetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureEthernetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureEthernetResponse) ProtoMessage() {}

func (x *ConfigureEthernetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureEthernetResponse.ProtoReflect.Descriptor instead.
func (*ConfigureEthernetResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{13}
}

type ConfigureLoraPacketForwarderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol LoraPacketForwarderProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=tti.gateway.controller.southbound.v1.LoraPacketForwarderProtocol" json:"protocol,omitempty"`
	Address  string                      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// DER encoded root CA certificate.
	RootCa []byte `protobuf:"bytes,3,opt,name=root_ca,json=rootCa,proto3" json:"root_ca,omitempty"`
}

func (x *ConfigureLoraPacketForwarderRequest) Reset() {
	*x = ConfigureLoraPacketForwarderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureLoraPacketForwarderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureLoraPacketForwarderRequest) ProtoMessage() {}

func (x *ConfigureLoraPacketForwarderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureLoraPacketForwarderRequest.ProtoReflect.Descriptor instead.
func (*ConfigureLoraPacketForwarderRequest) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{14}
}

func (x *ConfigureLoraPacketForwarderRequest) GetProtocol() LoraPacketForwarderProtocol {
	if x != nil {
		return x.Protocol
	}
	return LoraPacketForwarderProtocol_LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED
}

func (x *ConfigureLoraPacketForwarderRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ConfigureLoraPacketForwarderRequest) GetRootCa() []byte {
	if x != nil {
		return x.RootCa
	}
	return nil
}

type ConfigureLoraPacketForwarderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureLoraPacketForwarderResponse) Reset() {
	*x = ConfigureLoraPacketForwarderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureLoraPacketForwarderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureLoraPacketForwarderResponse) ProtoMessage() {}

func (x *ConfigureLoraPacketForwarderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureLoraPacketForwarderResponse.ProtoReflect.Descriptor instead.
func (*ConfigureLoraPacketForwarderResponse) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{15}
}

type LoraPacketForwarderStatusNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol             LoraPacketForwarderProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=tti.gateway.controller.southbound.v1.LoraPacketForwarderProtocol" json:"protocol,omitempty"`
	Address              string                      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Connected            bool                        `protobuf:"varint,3,opt,name=connected,proto3" json:"connected,omitempty"`
	NetworkInterfaceType NetworkInterfaceType        `protobuf:"varint,4,opt,name=network_interface_type,json=networkInterfaceType,proto3,enum=tti.gateway.controller.southbound.v1.NetworkInterfaceType" json:"network_interface_type,omitempty"`
}

func (x *LoraPacketForwarderStatusNotification) Reset() {
	*x = LoraPacketForwarderStatusNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoraPacketForwarderStatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoraPacketForwarderStatusNotification) ProtoMessage() {}

func (x *LoraPacketForwarderStatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoraPacketForwarderStatusNotification.ProtoReflect.Descriptor instead.
func (*LoraPacketForwarderStatusNotification) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{16}
}

func (x *LoraPacketForwarderStatusNotification) GetProtocol() LoraPacketForwarderProtocol {
	if x != nil {
		return x.Protocol
	}
	return LoraPacketForwarderProtocol_LORA_PACKET_FORWARDER_PROTOCOL_UNSPECIFIED
}

func (x *LoraPacketForwarderStatusNotification) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LoraPacketForwarderStatusNotification) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *LoraPacketForwarderStatusNotification) GetNetworkInterfaceType() NetworkInterfaceType {
	if x != nil {
		return x.NetworkInterfaceType
	}
	return NetworkInterfaceType_NETWORK_INTERFACE_TYPE_UNSPECIFIED
}

type ControllerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId uint32 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// Types that are assignable to Message:
	//
	//	*ControllerMessage_ErrorNotification
	//	*ControllerMessage_ServerHelloNotification
	//	*ControllerMessage_ScanWifiAccessPointsRequest
	//	*ControllerMessage_ConfigureWifiRequest
	//	*ControllerMessage_ConfigureEthernetRequest
	//	*ControllerMessage_ConfigureLoraPacketForwarderRequest
	Message isControllerMessage_Message `protobuf_oneof:"message"`
}

func (x *ControllerMessage) Reset() {
	*x = ControllerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage) ProtoMessage() {}

func (x *ControllerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage.ProtoReflect.Descriptor instead.
func (*ControllerMessage) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{17}
}

func (x *ControllerMessage) GetTransactionId() uint32 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (m *ControllerMessage) GetMessage() isControllerMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ControllerMessage) GetErrorNotification() *ErrorNotification {
	if x, ok := x.GetMessage().(*ControllerMessage_ErrorNotification); ok {
		return x.ErrorNotification
	}
	return nil
}

func (x *ControllerMessage) GetServerHelloNotification() *ServerHelloNotification {
	if x, ok := x.GetMessage().(*ControllerMessage_ServerHelloNotification); ok {
		return x.ServerHelloNotification
	}
	return nil
}

func (x *ControllerMessage) GetScanWifiAccessPointsRequest() *ScanWifiAccessPointsRequest {
	if x, ok := x.GetMessage().(*ControllerMessage_ScanWifiAccessPointsRequest); ok {
		return x.ScanWifiAccessPointsRequest
	}
	return nil
}

func (x *ControllerMessage) GetConfigureWifiRequest() *ConfigureWifiRequest {
	if x, ok := x.GetMessage().(*ControllerMessage_ConfigureWifiRequest); ok {
		return x.ConfigureWifiRequest
	}
	return nil
}

func (x *ControllerMessage) GetConfigureEthernetRequest() *ConfigureEthernetRequest {
	if x, ok := x.GetMessage().(*ControllerMessage_ConfigureEthernetRequest); ok {
		return x.ConfigureEthernetRequest
	}
	return nil
}

func (x *ControllerMessage) GetConfigureLoraPacketForwarderRequest() *ConfigureLoraPacketForwarderRequest {
	if x, ok := x.GetMessage().(*ControllerMessage_ConfigureLoraPacketForwarderRequest); ok {
		return x.ConfigureLoraPacketForwarderRequest
	}
	return nil
}

type isControllerMessage_Message interface {
	isControllerMessage_Message()
}

type ControllerMessage_ErrorNotification struct {
	ErrorNotification *ErrorNotification `protobuf:"bytes,2,opt,name=error_notification,json=errorNotification,proto3,oneof"`
}

type ControllerMessage_ServerHelloNotification struct {
	ServerHelloNotification *ServerHelloNotification `protobuf:"bytes,3,opt,name=server_hello_notification,json=serverHelloNotification,proto3,oneof"`
}

type ControllerMessage_ScanWifiAccessPointsRequest struct {
	ScanWifiAccessPointsRequest *ScanWifiAccessPointsRequest `protobuf:"bytes,4,opt,name=scan_wifi_access_points_request,json=scanWifiAccessPointsRequest,proto3,oneof"`
}

type ControllerMessage_ConfigureWifiRequest struct {
	ConfigureWifiRequest *ConfigureWifiRequest `protobuf:"bytes,5,opt,name=configure_wifi_request,json=configureWifiRequest,proto3,oneof"`
}

type ControllerMessage_ConfigureEthernetRequest struct {
	ConfigureEthernetRequest *ConfigureEthernetRequest `protobuf:"bytes,6,opt,name=configure_ethernet_request,json=configureEthernetRequest,proto3,oneof"`
}

type ControllerMessage_ConfigureLoraPacketForwarderRequest struct {
	ConfigureLoraPacketForwarderRequest *ConfigureLoraPacketForwarderRequest `protobuf:"bytes,7,opt,name=configure_lora_packet_forwarder_request,json=configureLoraPacketForwarderRequest,proto3,oneof"`
}

func (*ControllerMessage_ErrorNotification) isControllerMessage_Message() {}

func (*ControllerMessage_ServerHelloNotification) isControllerMessage_Message() {}

func (*ControllerMessage_ScanWifiAccessPointsRequest) isControllerMessage_Message() {}

func (*ControllerMessage_ConfigureWifiRequest) isControllerMessage_Message() {}

func (*ControllerMessage_ConfigureEthernetRequest) isControllerMessage_Message() {}

func (*ControllerMessage_ConfigureLoraPacketForwarderRequest) isControllerMessage_Message() {}

type GatewayMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId uint32 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// Types that are assignable to Message:
	//
	//	*GatewayMessage_ErrorNotification
	//	*GatewayMessage_ClientHelloNotification
	//	*GatewayMessage_StatusNotification
	//	*GatewayMessage_ConfigureWifiResponse
	//	*GatewayMessage_ConfigureEthernetResponse
	//	*GatewayMessage_NetworkInterfacesNotification
	//	*GatewayMessage_NetworkPerformancesNotification
	//	*GatewayMessage_ScanWifiAccessPointsResponse
	//	*GatewayMessage_ConfigureLoraPacketForwarderResponse
	//	*GatewayMessage_LoraPacketForwarderStatusNotification
	Message isGatewayMessage_Message `protobuf_oneof:"message"`
}

func (x *GatewayMessage) Reset() {
	*x = GatewayMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayMessage) ProtoMessage() {}

func (x *GatewayMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayMessage.ProtoReflect.Descriptor instead.
func (*GatewayMessage) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{18}
}

func (x *GatewayMessage) GetTransactionId() uint32 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (m *GatewayMessage) GetMessage() isGatewayMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *GatewayMessage) GetErrorNotification() *ErrorNotification {
	if x, ok := x.GetMessage().(*GatewayMessage_ErrorNotification); ok {
		return x.ErrorNotification
	}
	return nil
}

func (x *GatewayMessage) GetClientHelloNotification() *ClientHelloNotification {
	if x, ok := x.GetMessage().(*GatewayMessage_ClientHelloNotification); ok {
		return x.ClientHelloNotification
	}
	return nil
}

func (x *GatewayMessage) GetStatusNotification() *StatusNotification {
	if x, ok := x.GetMessage().(*GatewayMessage_StatusNotification); ok {
		return x.StatusNotification
	}
	return nil
}

func (x *GatewayMessage) GetConfigureWifiResponse() *ConfigureWifiResponse {
	if x, ok := x.GetMessage().(*GatewayMessage_ConfigureWifiResponse); ok {
		return x.ConfigureWifiResponse
	}
	return nil
}

func (x *GatewayMessage) GetConfigureEthernetResponse() *ConfigureEthernetResponse {
	if x, ok := x.GetMessage().(*GatewayMessage_ConfigureEthernetResponse); ok {
		return x.ConfigureEthernetResponse
	}
	return nil
}

func (x *GatewayMessage) GetNetworkInterfacesNotification() *NetworkInterfacesNotification {
	if x, ok := x.GetMessage().(*GatewayMessage_NetworkInterfacesNotification); ok {
		return x.NetworkInterfacesNotification
	}
	return nil
}

func (x *GatewayMessage) GetNetworkPerformancesNotification() *NetworkPerformancesNotification {
	if x, ok := x.GetMessage().(*GatewayMessage_NetworkPerformancesNotification); ok {
		return x.NetworkPerformancesNotification
	}
	return nil
}

func (x *GatewayMessage) GetScanWifiAccessPointsResponse() *ScanWifiAccessPointsResponse {
	if x, ok := x.GetMessage().(*GatewayMessage_ScanWifiAccessPointsResponse); ok {
		return x.ScanWifiAccessPointsResponse
	}
	return nil
}

func (x *GatewayMessage) GetConfigureLoraPacketForwarderResponse() *ConfigureLoraPacketForwarderResponse {
	if x, ok := x.GetMessage().(*GatewayMessage_ConfigureLoraPacketForwarderResponse); ok {
		return x.ConfigureLoraPacketForwarderResponse
	}
	return nil
}

func (x *GatewayMessage) GetLoraPacketForwarderStatusNotification() *LoraPacketForwarderStatusNotification {
	if x, ok := x.GetMessage().(*GatewayMessage_LoraPacketForwarderStatusNotification); ok {
		return x.LoraPacketForwarderStatusNotification
	}
	return nil
}

type isGatewayMessage_Message interface {
	isGatewayMessage_Message()
}

type GatewayMessage_ErrorNotification struct {
	ErrorNotification *ErrorNotification `protobuf:"bytes,2,opt,name=error_notification,json=errorNotification,proto3,oneof"`
}

type GatewayMessage_ClientHelloNotification struct {
	ClientHelloNotification *ClientHelloNotification `protobuf:"bytes,3,opt,name=client_hello_notification,json=clientHelloNotification,proto3,oneof"`
}

type GatewayMessage_StatusNotification struct {
	StatusNotification *StatusNotification `protobuf:"bytes,4,opt,name=status_notification,json=statusNotification,proto3,oneof"`
}

type GatewayMessage_ConfigureWifiResponse struct {
	ConfigureWifiResponse *ConfigureWifiResponse `protobuf:"bytes,5,opt,name=configure_wifi_response,json=configureWifiResponse,proto3,oneof"`
}

type GatewayMessage_ConfigureEthernetResponse struct {
	ConfigureEthernetResponse *ConfigureEthernetResponse `protobuf:"bytes,6,opt,name=configure_ethernet_response,json=configureEthernetResponse,proto3,oneof"`
}

type GatewayMessage_NetworkInterfacesNotification struct {
	NetworkInterfacesNotification *NetworkInterfacesNotification `protobuf:"bytes,7,opt,name=network_interfaces_notification,json=networkInterfacesNotification,proto3,oneof"`
}

type GatewayMessage_NetworkPerformancesNotification struct {
	NetworkPerformancesNotification *NetworkPerformancesNotification `protobuf:"bytes,8,opt,name=network_performances_notification,json=networkPerformancesNotification,proto3,oneof"`
}

type GatewayMessage_ScanWifiAccessPointsResponse struct {
	ScanWifiAccessPointsResponse *ScanWifiAccessPointsResponse `protobuf:"bytes,9,opt,name=scan_wifi_access_points_response,json=scanWifiAccessPointsResponse,proto3,oneof"`
}

type GatewayMessage_ConfigureLoraPacketForwarderResponse struct {
	ConfigureLoraPacketForwarderResponse *ConfigureLoraPacketForwarderResponse `protobuf:"bytes,10,opt,name=configure_lora_packet_forwarder_response,json=configureLoraPacketForwarderResponse,proto3,oneof"`
}

type GatewayMessage_LoraPacketForwarderStatusNotification struct {
	LoraPacketForwarderStatusNotification *LoraPacketForwarderStatusNotification `protobuf:"bytes,11,opt,name=lora_packet_forwarder_status_notification,json=loraPacketForwarderStatusNotification,proto3,oneof"`
}

func (*GatewayMessage_ErrorNotification) isGatewayMessage_Message() {}

func (*GatewayMessage_ClientHelloNotification) isGatewayMessage_Message() {}

func (*GatewayMessage_StatusNotification) isGatewayMessage_Message() {}

func (*GatewayMessage_ConfigureWifiResponse) isGatewayMessage_Message() {}

func (*GatewayMessage_ConfigureEthernetResponse) isGatewayMessage_Message() {}

func (*GatewayMessage_NetworkInterfacesNotification) isGatewayMessage_Message() {}

func (*GatewayMessage_NetworkPerformancesNotification) isGatewayMessage_Message() {}

func (*GatewayMessage_ScanWifiAccessPointsResponse) isGatewayMessage_Message() {}

func (*GatewayMessage_ConfigureLoraPacketForwarderResponse) isGatewayMessage_Message() {}

func (*GatewayMessage_LoraPacketForwarderStatusNotification) isGatewayMessage_Message() {}

type NetworkInterfaceInfo_Cellular struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator string `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *NetworkInterfaceInfo_Cellular) Reset() {
	*x = NetworkInterfaceInfo_Cellular{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceInfo_Cellular) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceInfo_Cellular) ProtoMessage() {}

func (x *NetworkInterfaceInfo_Cellular) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceInfo_Cellular.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceInfo_Cellular) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{1, 0}
}

func (x *NetworkInterfaceInfo_Cellular) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type NetworkInterfaceInfo_Wifi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid               string                 `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Bssid              []byte                 `protobuf:"bytes,2,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Channel            uint32                 `protobuf:"varint,3,opt,name=channel,proto3" json:"channel,omitempty"`
	AuthenticationMode WifiAuthenticationMode `protobuf:"varint,4,opt,name=authentication_mode,json=authenticationMode,proto3,enum=tti.gateway.controller.southbound.v1.WifiAuthenticationMode" json:"authentication_mode,omitempty"`
}

func (x *NetworkInterfaceInfo_Wifi) Reset() {
	*x = NetworkInterfaceInfo_Wifi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceInfo_Wifi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceInfo_Wifi) ProtoMessage() {}

func (x *NetworkInterfaceInfo_Wifi) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceInfo_Wifi.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceInfo_Wifi) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{1, 1}
}

func (x *NetworkInterfaceInfo_Wifi) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *NetworkInterfaceInfo_Wifi) GetBssid() []byte {
	if x != nil {
		return x.Bssid
	}
	return nil
}

func (x *NetworkInterfaceInfo_Wifi) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *NetworkInterfaceInfo_Wifi) GetAuthenticationMode() WifiAuthenticationMode {
	if x != nil {
		return x.AuthenticationMode
	}
	return WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_UNSPECIFIED
}

type NetworkInterfaceInfo_Ethernet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NetworkInterfaceInfo_Ethernet) Reset() {
	*x = NetworkInterfaceInfo_Ethernet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceInfo_Ethernet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceInfo_Ethernet) ProtoMessage() {}

func (x *NetworkInterfaceInfo_Ethernet) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceInfo_Ethernet.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceInfo_Ethernet) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{1, 2}
}

type NetworkPerformanceInfo_Cellular struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RssiNegated float32 `protobuf:"fixed32,1,opt,name=rssi_negated,json=rssiNegated,proto3" json:"rssi_negated,omitempty"`
}

func (x *NetworkPerformanceInfo_Cellular) Reset() {
	*x = NetworkPerformanceInfo_Cellular{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPerformanceInfo_Cellular) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPerformanceInfo_Cellular) ProtoMessage() {}

func (x *NetworkPerformanceInfo_Cellular) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPerformanceInfo_Cellular.ProtoReflect.Descriptor instead.
func (*NetworkPerformanceInfo_Cellular) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{2, 0}
}

func (x *NetworkPerformanceInfo_Cellular) GetRssiNegated() float32 {
	if x != nil {
		return x.RssiNegated
	}
	return 0
}

type NetworkPerformanceInfo_Wifi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RssiNegated float32 `protobuf:"fixed32,1,opt,name=rssi_negated,json=rssiNegated,proto3" json:"rssi_negated,omitempty"`
}

func (x *NetworkPerformanceInfo_Wifi) Reset() {
	*x = NetworkPerformanceInfo_Wifi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPerformanceInfo_Wifi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPerformanceInfo_Wifi) ProtoMessage() {}

func (x *NetworkPerformanceInfo_Wifi) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPerformanceInfo_Wifi.ProtoReflect.Descriptor instead.
func (*NetworkPerformanceInfo_Wifi) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{2, 1}
}

func (x *NetworkPerformanceInfo_Wifi) GetRssiNegated() float32 {
	if x != nil {
		return x.RssiNegated
	}
	return 0
}

type NetworkPerformanceInfo_Ethernet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NetworkPerformanceInfo_Ethernet) Reset() {
	*x = NetworkPerformanceInfo_Ethernet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPerformanceInfo_Ethernet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPerformanceInfo_Ethernet) ProtoMessage() {}

func (x *NetworkPerformanceInfo_Ethernet) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPerformanceInfo_Ethernet.ProtoReflect.Descriptor instead.
func (*NetworkPerformanceInfo_Ethernet) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{2, 2}
}

type ClientHelloNotification_Cellular struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei string `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`
	Imsi string `protobuf:"bytes,2,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *ClientHelloNotification_Cellular) Reset() {
	*x = ClientHelloNotification_Cellular{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientHelloNotification_Cellular) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHelloNotification_Cellular) ProtoMessage() {}

func (x *ClientHelloNotification_Cellular) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHelloNotification_Cellular.ProtoReflect.Descriptor instead.
func (*ClientHelloNotification_Cellular) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ClientHelloNotification_Cellular) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *ClientHelloNotification_Cellular) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

type ClientHelloNotification_Wifi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress []byte `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *ClientHelloNotification_Wifi) Reset() {
	*x = ClientHelloNotification_Wifi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientHelloNotification_Wifi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHelloNotification_Wifi) ProtoMessage() {}

func (x *ClientHelloNotification_Wifi) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHelloNotification_Wifi.ProtoReflect.Descriptor instead.
func (*ClientHelloNotification_Wifi) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ClientHelloNotification_Wifi) GetMacAddress() []byte {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

type ClientHelloNotification_Ethernet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress []byte `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *ClientHelloNotification_Ethernet) Reset() {
	*x = ClientHelloNotification_Ethernet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientHelloNotification_Ethernet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHelloNotification_Ethernet) ProtoMessage() {}

func (x *ClientHelloNotification_Ethernet) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHelloNotification_Ethernet.ProtoReflect.Descriptor instead.
func (*ClientHelloNotification_Ethernet) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{3, 2}
}

func (x *ClientHelloNotification_Ethernet) GetMacAddress() []byte {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

type StatusNotification_System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CPU temperature (in degrees Celsius). May be omitted if not available.
	CpuTemperature *wrapperspb.FloatValue `protobuf:"bytes,1,opt,name=cpu_temperature,json=cpuTemperature,proto3" json:"cpu_temperature,omitempty"`
	// Current free heap memory (in bytes).
	HeapMemoryFreeBytesCurrent uint64 `protobuf:"varint,2,opt,name=heap_memory_free_bytes_current,json=heapMemoryFreeBytesCurrent,proto3" json:"heap_memory_free_bytes_current,omitempty"`
	// Minimum free heap memory (in bytes).
	HeapMemoryFreeBytesMinimum uint64 `protobuf:"varint,3,opt,name=heap_memory_free_bytes_minimum,json=heapMemoryFreeBytesMinimum,proto3" json:"heap_memory_free_bytes_minimum,omitempty"`
	// Largest free block of heap memory (in bytes).
	HeapMemoryLargestFreeBlockBytes uint64 `protobuf:"varint,4,opt,name=heap_memory_largest_free_block_bytes,json=heapMemoryLargestFreeBlockBytes,proto3" json:"heap_memory_largest_free_block_bytes,omitempty"`
}

func (x *StatusNotification_System) Reset() {
	*x = StatusNotification_System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusNotification_System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusNotification_System) ProtoMessage() {}

func (x *StatusNotification_System) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusNotification_System.ProtoReflect.Descriptor instead.
func (*StatusNotification_System) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{5, 0}
}

func (x *StatusNotification_System) GetCpuTemperature() *wrapperspb.FloatValue {
	if x != nil {
		return x.CpuTemperature
	}
	return nil
}

func (x *StatusNotification_System) GetHeapMemoryFreeBytesCurrent() uint64 {
	if x != nil {
		return x.HeapMemoryFreeBytesCurrent
	}
	return 0
}

func (x *StatusNotification_System) GetHeapMemoryFreeBytesMinimum() uint64 {
	if x != nil {
		return x.HeapMemoryFreeBytesMinimum
	}
	return 0
}

func (x *StatusNotification_System) GetHeapMemoryLargestFreeBlockBytes() uint64 {
	if x != nil {
		return x.HeapMemoryLargestFreeBlockBytes
	}
	return 0
}

type ScanWifiAccessPointsResponse_AccessPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid               string                 `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Bssid              []byte                 `protobuf:"bytes,2,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Channel            uint32                 `protobuf:"varint,3,opt,name=channel,proto3" json:"channel,omitempty"`
	AuthenticationMode WifiAuthenticationMode `protobuf:"varint,4,opt,name=authentication_mode,json=authenticationMode,proto3,enum=tti.gateway.controller.southbound.v1.WifiAuthenticationMode" json:"authentication_mode,omitempty"`
	RssiNegated        float32                `protobuf:"fixed32,5,opt,name=rssi_negated,json=rssiNegated,proto3" json:"rssi_negated,omitempty"`
}

func (x *ScanWifiAccessPointsResponse_AccessPoint) Reset() {
	*x = ScanWifiAccessPointsResponse_AccessPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanWifiAccessPointsResponse_AccessPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanWifiAccessPointsResponse_AccessPoint) ProtoMessage() {}

func (x *ScanWifiAccessPointsResponse_AccessPoint) ProtoReflect() protoreflect.Message {
	mi := &file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanWifiAccessPointsResponse_AccessPoint.ProtoReflect.Descriptor instead.
func (*ScanWifiAccessPointsResponse_AccessPoint) Descriptor() ([]byte, []int) {
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ScanWifiAccessPointsResponse_AccessPoint) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *ScanWifiAccessPointsResponse_AccessPoint) GetBssid() []byte {
	if x != nil {
		return x.Bssid
	}
	return nil
}

func (x *ScanWifiAccessPointsResponse_AccessPoint) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *ScanWifiAccessPointsResponse_AccessPoint) GetAuthenticationMode() WifiAuthenticationMode {
	if x != nil {
		return x.AuthenticationMode
	}
	return WifiAuthenticationMode_WIFI_AUTHENTICATION_MODE_UNSPECIFIED
}

func (x *ScanWifiAccessPointsResponse_AccessPoint) GetRssiNegated() float32 {
	if x != nil {
		return x.RssiNegated
	}
	return 0
}

var File_tti_gateway_controller_southbound_v1_messages_proto protoreflect.FileDescriptor

var file_tti_gateway_controller_southbound_v1_messages_proto_rawDesc = []byte{
	0x0a, 0x33, 0x74, 0x74, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f,
	0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x74, 0x74, 0x69,
	0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x01,
	0x0a, 0x19, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x70, 0x76, 0x34, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0e, 0x69, 0x70, 0x76, 0x34, 0x53, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b,
	0x69, 0x70, 0x76, 0x34, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x70, 0x76, 0x36, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x07, 0x52, 0x0e, 0x69, 0x70, 0x76, 0x34, 0x44, 0x6e,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x83, 0x06, 0x0a, 0x14, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x54, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3c, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x68, 0x63, 0x70, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64,
	0x68, 0x63, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5d, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x08, 0x63, 0x65, 0x6c,
	0x6c, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x74, 0x74,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72,
	0x48, 0x00, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x55, 0x0a, 0x04,
	0x77, 0x69, 0x66, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x48, 0x00, 0x52, 0x04, 0x77,
	0x69, 0x66, 0x69, 0x12, 0x61, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73,
	0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x48, 0x00, 0x52, 0x08, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x1a, 0x26, 0x0a, 0x08, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c,
	0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0xb9,
	0x01, 0x0a, 0x04, 0x57, 0x69, 0x66, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x73, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x73, 0x73, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x6d, 0x0a, 0x13, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x69, 0x66, 0x69, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa9,
	0x03, 0x0a, 0x16, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x63, 0x0a, 0x08, 0x63, 0x65, 0x6c,
	0x6c, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x74, 0x74,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c,
	0x61, 0x72, 0x48, 0x00, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x57,
	0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x48,
	0x00, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x63, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x1a, 0x2d, 0x0a, 0x08,
	0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x73, 0x73, 0x69,
	0x5f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x72, 0x73, 0x73, 0x69, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x29, 0x0a, 0x04, 0x57,
	0x69, 0x66, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x73, 0x73, 0x69, 0x5f, 0x6e, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x73, 0x73, 0x69, 0x4e,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbb, 0x06, 0x0a, 0x17, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x29, 0x0a,
	0x10, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x16,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62,
	0x0a, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x46, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c,
	0x61, 0x72, 0x12, 0x56, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x42, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x57, 0x69, 0x66, 0x69, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x62, 0x0a, 0x08, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x74, 0x68, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x52, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x1a, 0x32,
	0x0a, 0x08, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d,
	0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d,
	0x73, 0x69, 0x1a, 0x27, 0x0a, 0x04, 0x57, 0x69, 0x66, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x2b, 0x0a, 0x08, 0x45,
	0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x95, 0x03, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x1a, 0xa5, 0x02, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x44,
	0x0a, 0x0f, 0x63, 0x70, 0x75, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x63, 0x70, 0x75, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x68, 0x65, 0x61, 0x70, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x68, 0x65,
	0x61, 0x70, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x1e, 0x68, 0x65, 0x61, 0x70,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1a, 0x68, 0x65, 0x61, 0x70, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x4d, 0x0a, 0x24,
	0x68, 0x65, 0x61, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x72, 0x67,
	0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x68, 0x65, 0x61, 0x70,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x73, 0x74, 0x46, 0x72, 0x65,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x1d,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a,
	0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1f, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x14,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x1d, 0x0a,
	0x1b, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x69, 0x66, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf9, 0x02, 0x0a,
	0x1c, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x69, 0x66, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f,
	0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e,
	0x57, 0x69, 0x66, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x1a, 0xe3, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x73, 0x73, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x73, 0x73, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x6d, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75,
	0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x73, 0x73, 0x69, 0x5f, 0x6e, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x73, 0x73,
	0x69, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x5c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f,
	0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x70, 0x22,
	0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x49, 0x70, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x45,
	0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xb7, 0x01, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x72,
	0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x74, 0x74, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x61, 0x22, 0x26, 0x0a, 0x24, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xb0, 0x02, 0x0a, 0x25, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x70, 0x0a, 0x16, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xd0, 0x06, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x68, 0x0a, 0x12, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7b, 0x0a, 0x19, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x17, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x89, 0x01, 0x0a, 0x1f, 0x73, 0x63, 0x61,
	0x6e, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x69,
	0x66, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x63, 0x61, 0x6e, 0x57, 0x69, 0x66,
	0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f,
	0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0xa1, 0x01, 0x0a, 0x27, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x6f, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x72, 0x61, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x23, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x97, 0x0b, 0x0a, 0x0e, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x68, 0x0a, 0x12, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7b, 0x0a, 0x19, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73,
	0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a,
	0x1b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8d, 0x01, 0x0a, 0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x74, 0x74, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x1d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x93, 0x01, 0x0a, 0x21, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x74,
	0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8c, 0x01, 0x0a, 0x20, 0x73, 0x63, 0x61, 0x6e, 0x5f,
	0x77, 0x69, 0x66, 0x69, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x42, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x69, 0x66,
	0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x63, 0x61, 0x6e, 0x57, 0x69, 0x66,
	0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa4, 0x01, 0x0a, 0x28, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x5f, 0x6c, 0x6f, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x24, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa7, 0x01, 0x0a,
	0x29, 0x6c, 0x6f, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4b, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x25, 0x6c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2a, 0xa9, 0x01, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x45,
	0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4c,
	0x4c, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x45, 0x54, 0x57, 0x4f,
	0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x57, 0x49, 0x46, 0x49, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x45, 0x54, 0x57,
	0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x10, 0x03, 0x2a, 0xab, 0x01,
	0x0a, 0x16, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x24, 0x4e, 0x45, 0x54, 0x57,
	0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x50, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52,
	0x4b, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xd5, 0x04, 0x0a, 0x16,
	0x57, 0x69, 0x66, 0x69, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x21, 0x0a, 0x1d, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x50, 0x45,
	0x4e, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48,
	0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x57, 0x45, 0x50, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x57, 0x50, 0x41, 0x5f, 0x50, 0x53, 0x4b, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x57,
	0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x50, 0x41, 0x32, 0x5f, 0x50, 0x53, 0x4b,
	0x10, 0x04, 0x12, 0x29, 0x0a, 0x25, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45,
	0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57,
	0x50, 0x41, 0x5f, 0x57, 0x50, 0x41, 0x32, 0x5f, 0x50, 0x53, 0x4b, 0x10, 0x05, 0x12, 0x2c, 0x0a,
	0x28, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x50, 0x41, 0x32, 0x5f, 0x45,
	0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x10, 0x06, 0x12, 0x25, 0x0a, 0x21, 0x57,
	0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x50, 0x41, 0x33, 0x5f, 0x50, 0x53, 0x4b,
	0x10, 0x07, 0x12, 0x2a, 0x0a, 0x26, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45,
	0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57,
	0x50, 0x41, 0x32, 0x5f, 0x57, 0x50, 0x41, 0x33, 0x5f, 0x50, 0x53, 0x4b, 0x10, 0x08, 0x12, 0x25,
	0x0a, 0x21, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x41, 0x50, 0x49, 0x5f,
	0x50, 0x53, 0x4b, 0x10, 0x09, 0x12, 0x20, 0x0a, 0x1c, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x4f, 0x57, 0x45, 0x10, 0x0a, 0x12, 0x29, 0x0a, 0x25, 0x57, 0x49, 0x46, 0x49, 0x5f,
	0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x57, 0x50, 0x41, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x5f, 0x31, 0x39, 0x32,
	0x10, 0x0b, 0x12, 0x29, 0x0a, 0x25, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45,
	0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57,
	0x50, 0x41, 0x33, 0x5f, 0x45, 0x58, 0x54, 0x5f, 0x50, 0x53, 0x4b, 0x10, 0x0c, 0x12, 0x34, 0x0a,
	0x30, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x50, 0x41, 0x33, 0x5f, 0x45,
	0x58, 0x54, 0x5f, 0x50, 0x53, 0x4b, 0x5f, 0x4d, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x10, 0x0d, 0x2a, 0x77, 0x0a, 0x1b, 0x4c, 0x6f, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x2a, 0x4c, 0x4f, 0x52, 0x41, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x4c, 0x4f, 0x52, 0x41, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x54, 0x54, 0x49, 0x56, 0x31, 0x10, 0x01, 0x42, 0xc1, 0x02, 0x0a,
	0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x74, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x6f, 0x75, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x6f, 0x2e, 0x74,
	0x68, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x74, 0x69, 0x2f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x04,
	0x54, 0x47, 0x43, 0x53, 0xaa, 0x02, 0x24, 0x54, 0x74, 0x69, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x6f,
	0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x24, 0x54, 0x74,
	0x69, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x53, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x30, 0x54, 0x74, 0x69, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x53, 0x6f, 0x75, 0x74,
	0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x28, 0x54, 0x74, 0x69, 0x3a, 0x3a, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x3a, 0x3a, 0x53, 0x6f, 0x75, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tti_gateway_controller_southbound_v1_messages_proto_rawDescOnce sync.Once
	file_tti_gateway_controller_southbound_v1_messages_proto_rawDescData = file_tti_gateway_controller_southbound_v1_messages_proto_rawDesc
)

func file_tti_gateway_controller_southbound_v1_messages_proto_rawDescGZIP() []byte {
	file_tti_gateway_controller_southbound_v1_messages_proto_rawDescOnce.Do(func() {
		file_tti_gateway_controller_southbound_v1_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_tti_gateway_controller_southbound_v1_messages_proto_rawDescData)
	})
	return file_tti_gateway_controller_southbound_v1_messages_proto_rawDescData
}

var file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_tti_gateway_controller_southbound_v1_messages_proto_goTypes = []interface{}{
	(NetworkInterfaceType)(0),                        // 0: tti.gateway.controller.southbound.v1.NetworkInterfaceType
	(NetworkInterfaceStatus)(0),                      // 1: tti.gateway.controller.southbound.v1.NetworkInterfaceStatus
	(WifiAuthenticationMode)(0),                      // 2: tti.gateway.controller.southbound.v1.WifiAuthenticationMode
	(LoraPacketForwarderProtocol)(0),                 // 3: tti.gateway.controller.southbound.v1.LoraPacketForwarderProtocol
	(*NetworkInterfaceAddresses)(nil),                // 4: tti.gateway.controller.southbound.v1.NetworkInterfaceAddresses
	(*NetworkInterfaceInfo)(nil),                     // 5: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo
	(*NetworkPerformanceInfo)(nil),                   // 6: tti.gateway.controller.southbound.v1.NetworkPerformanceInfo
	(*ClientHelloNotification)(nil),                  // 7: tti.gateway.controller.southbound.v1.ClientHelloNotification
	(*ServerHelloNotification)(nil),                  // 8: tti.gateway.controller.southbound.v1.ServerHelloNotification
	(*StatusNotification)(nil),                       // 9: tti.gateway.controller.southbound.v1.StatusNotification
	(*NetworkInterfacesNotification)(nil),            // 10: tti.gateway.controller.southbound.v1.NetworkInterfacesNotification
	(*NetworkPerformancesNotification)(nil),          // 11: tti.gateway.controller.southbound.v1.NetworkPerformancesNotification
	(*ScanWifiAccessPointsRequest)(nil),              // 12: tti.gateway.controller.southbound.v1.ScanWifiAccessPointsRequest
	(*ScanWifiAccessPointsResponse)(nil),             // 13: tti.gateway.controller.southbound.v1.ScanWifiAccessPointsResponse
	(*ConfigureWifiRequest)(nil),                     // 14: tti.gateway.controller.southbound.v1.ConfigureWifiRequest
	(*ConfigureWifiResponse)(nil),                    // 15: tti.gateway.controller.southbound.v1.ConfigureWifiResponse
	(*ConfigureEthernetRequest)(nil),                 // 16: tti.gateway.controller.southbound.v1.ConfigureEthernetRequest
	(*ConfigureEthernetResponse)(nil),                // 17: tti.gateway.controller.southbound.v1.ConfigureEthernetResponse
	(*ConfigureLoraPacketForwarderRequest)(nil),      // 18: tti.gateway.controller.southbound.v1.ConfigureLoraPacketForwarderRequest
	(*ConfigureLoraPacketForwarderResponse)(nil),     // 19: tti.gateway.controller.southbound.v1.ConfigureLoraPacketForwarderResponse
	(*LoraPacketForwarderStatusNotification)(nil),    // 20: tti.gateway.controller.southbound.v1.LoraPacketForwarderStatusNotification
	(*ControllerMessage)(nil),                        // 21: tti.gateway.controller.southbound.v1.ControllerMessage
	(*GatewayMessage)(nil),                           // 22: tti.gateway.controller.southbound.v1.GatewayMessage
	(*NetworkInterfaceInfo_Cellular)(nil),            // 23: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.Cellular
	(*NetworkInterfaceInfo_Wifi)(nil),                // 24: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.Wifi
	(*NetworkInterfaceInfo_Ethernet)(nil),            // 25: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.Ethernet
	(*NetworkPerformanceInfo_Cellular)(nil),          // 26: tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.Cellular
	(*NetworkPerformanceInfo_Wifi)(nil),              // 27: tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.Wifi
	(*NetworkPerformanceInfo_Ethernet)(nil),          // 28: tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.Ethernet
	(*ClientHelloNotification_Cellular)(nil),         // 29: tti.gateway.controller.southbound.v1.ClientHelloNotification.Cellular
	(*ClientHelloNotification_Wifi)(nil),             // 30: tti.gateway.controller.southbound.v1.ClientHelloNotification.Wifi
	(*ClientHelloNotification_Ethernet)(nil),         // 31: tti.gateway.controller.southbound.v1.ClientHelloNotification.Ethernet
	(*StatusNotification_System)(nil),                // 32: tti.gateway.controller.southbound.v1.StatusNotification.System
	(*ScanWifiAccessPointsResponse_AccessPoint)(nil), // 33: tti.gateway.controller.southbound.v1.ScanWifiAccessPointsResponse.AccessPoint
	(*durationpb.Duration)(nil),                      // 34: google.protobuf.Duration
	(*ErrorNotification)(nil),                        // 35: tti.gateway.controller.southbound.v1.ErrorNotification
	(*wrapperspb.FloatValue)(nil),                    // 36: google.protobuf.FloatValue
}
var file_tti_gateway_controller_southbound_v1_messages_proto_depIdxs = []int32{
	1,  // 0: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.status:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceStatus
	4,  // 1: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.addresses:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceAddresses
	23, // 2: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.cellular:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.Cellular
	24, // 3: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.wifi:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.Wifi
	25, // 4: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.ethernet:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.Ethernet
	26, // 5: tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.cellular:type_name -> tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.Cellular
	27, // 6: tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.wifi:type_name -> tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.Wifi
	28, // 7: tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.ethernet:type_name -> tti.gateway.controller.southbound.v1.NetworkPerformanceInfo.Ethernet
	34, // 8: tti.gateway.controller.southbound.v1.ClientHelloNotification.uptime:type_name -> google.protobuf.Duration
	0,  // 9: tti.gateway.controller.southbound.v1.ClientHelloNotification.network_interface_type:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceType
	29, // 10: tti.gateway.controller.southbound.v1.ClientHelloNotification.cellular:type_name -> tti.gateway.controller.southbound.v1.ClientHelloNotification.Cellular
	30, // 11: tti.gateway.controller.southbound.v1.ClientHelloNotification.wifi:type_name -> tti.gateway.controller.southbound.v1.ClientHelloNotification.Wifi
	31, // 12: tti.gateway.controller.southbound.v1.ClientHelloNotification.ethernet:type_name -> tti.gateway.controller.southbound.v1.ClientHelloNotification.Ethernet
	32, // 13: tti.gateway.controller.southbound.v1.StatusNotification.system:type_name -> tti.gateway.controller.southbound.v1.StatusNotification.System
	5,  // 14: tti.gateway.controller.southbound.v1.NetworkInterfacesNotification.network_interfaces:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceInfo
	6,  // 15: tti.gateway.controller.southbound.v1.NetworkPerformancesNotification.network_performances:type_name -> tti.gateway.controller.southbound.v1.NetworkPerformanceInfo
	33, // 16: tti.gateway.controller.southbound.v1.ScanWifiAccessPointsResponse.access_points:type_name -> tti.gateway.controller.southbound.v1.ScanWifiAccessPointsResponse.AccessPoint
	4,  // 17: tti.gateway.controller.southbound.v1.ConfigureWifiRequest.static_ip:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceAddresses
	4,  // 18: tti.gateway.controller.southbound.v1.ConfigureEthernetRequest.static_ip:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceAddresses
	3,  // 19: tti.gateway.controller.southbound.v1.ConfigureLoraPacketForwarderRequest.protocol:type_name -> tti.gateway.controller.southbound.v1.LoraPacketForwarderProtocol
	3,  // 20: tti.gateway.controller.southbound.v1.LoraPacketForwarderStatusNotification.protocol:type_name -> tti.gateway.controller.southbound.v1.LoraPacketForwarderProtocol
	0,  // 21: tti.gateway.controller.southbound.v1.LoraPacketForwarderStatusNotification.network_interface_type:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfaceType
	35, // 22: tti.gateway.controller.southbound.v1.ControllerMessage.error_notification:type_name -> tti.gateway.controller.southbound.v1.ErrorNotification
	8,  // 23: tti.gateway.controller.southbound.v1.ControllerMessage.server_hello_notification:type_name -> tti.gateway.controller.southbound.v1.ServerHelloNotification
	12, // 24: tti.gateway.controller.southbound.v1.ControllerMessage.scan_wifi_access_points_request:type_name -> tti.gateway.controller.southbound.v1.ScanWifiAccessPointsRequest
	14, // 25: tti.gateway.controller.southbound.v1.ControllerMessage.configure_wifi_request:type_name -> tti.gateway.controller.southbound.v1.ConfigureWifiRequest
	16, // 26: tti.gateway.controller.southbound.v1.ControllerMessage.configure_ethernet_request:type_name -> tti.gateway.controller.southbound.v1.ConfigureEthernetRequest
	18, // 27: tti.gateway.controller.southbound.v1.ControllerMessage.configure_lora_packet_forwarder_request:type_name -> tti.gateway.controller.southbound.v1.ConfigureLoraPacketForwarderRequest
	35, // 28: tti.gateway.controller.southbound.v1.GatewayMessage.error_notification:type_name -> tti.gateway.controller.southbound.v1.ErrorNotification
	7,  // 29: tti.gateway.controller.southbound.v1.GatewayMessage.client_hello_notification:type_name -> tti.gateway.controller.southbound.v1.ClientHelloNotification
	9,  // 30: tti.gateway.controller.southbound.v1.GatewayMessage.status_notification:type_name -> tti.gateway.controller.southbound.v1.StatusNotification
	15, // 31: tti.gateway.controller.southbound.v1.GatewayMessage.configure_wifi_response:type_name -> tti.gateway.controller.southbound.v1.ConfigureWifiResponse
	17, // 32: tti.gateway.controller.southbound.v1.GatewayMessage.configure_ethernet_response:type_name -> tti.gateway.controller.southbound.v1.ConfigureEthernetResponse
	10, // 33: tti.gateway.controller.southbound.v1.GatewayMessage.network_interfaces_notification:type_name -> tti.gateway.controller.southbound.v1.NetworkInterfacesNotification
	11, // 34: tti.gateway.controller.southbound.v1.GatewayMessage.network_performances_notification:type_name -> tti.gateway.controller.southbound.v1.NetworkPerformancesNotification
	13, // 35: tti.gateway.controller.southbound.v1.GatewayMessage.scan_wifi_access_points_response:type_name -> tti.gateway.controller.southbound.v1.ScanWifiAccessPointsResponse
	19, // 36: tti.gateway.controller.southbound.v1.GatewayMessage.configure_lora_packet_forwarder_response:type_name -> tti.gateway.controller.southbound.v1.ConfigureLoraPacketForwarderResponse
	20, // 37: tti.gateway.controller.southbound.v1.GatewayMessage.lora_packet_forwarder_status_notification:type_name -> tti.gateway.controller.southbound.v1.LoraPacketForwarderStatusNotification
	2,  // 38: tti.gateway.controller.southbound.v1.NetworkInterfaceInfo.Wifi.authentication_mode:type_name -> tti.gateway.controller.southbound.v1.WifiAuthenticationMode
	36, // 39: tti.gateway.controller.southbound.v1.StatusNotification.System.cpu_temperature:type_name -> google.protobuf.FloatValue
	2,  // 40: tti.gateway.controller.southbound.v1.ScanWifiAccessPointsResponse.AccessPoint.authentication_mode:type_name -> tti.gateway.controller.southbound.v1.WifiAuthenticationMode
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_tti_gateway_controller_southbound_v1_messages_proto_init() }
func file_tti_gateway_controller_southbound_v1_messages_proto_init() {
	if File_tti_gateway_controller_southbound_v1_messages_proto != nil {
		return
	}
	file_tti_gateway_controller_southbound_v1_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceAddresses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPerformanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientHelloNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerHelloNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfacesNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPerformancesNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanWifiAccessPointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanWifiAccessPointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureWifiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureWifiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureEthernetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureEthernetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureLoraPacketForwarderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureLoraPacketForwarderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoraPacketForwarderStatusNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceInfo_Cellular); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceInfo_Wifi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceInfo_Ethernet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPerformanceInfo_Cellular); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPerformanceInfo_Wifi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPerformanceInfo_Ethernet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientHelloNotification_Cellular); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientHelloNotification_Wifi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientHelloNotification_Ethernet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusNotification_System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanWifiAccessPointsResponse_AccessPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*NetworkInterfaceInfo_Cellular_)(nil),
		(*NetworkInterfaceInfo_Wifi_)(nil),
		(*NetworkInterfaceInfo_Ethernet_)(nil),
	}
	file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*NetworkPerformanceInfo_Cellular_)(nil),
		(*NetworkPerformanceInfo_Wifi_)(nil),
		(*NetworkPerformanceInfo_Ethernet_)(nil),
	}
	file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*ControllerMessage_ErrorNotification)(nil),
		(*ControllerMessage_ServerHelloNotification)(nil),
		(*ControllerMessage_ScanWifiAccessPointsRequest)(nil),
		(*ControllerMessage_ConfigureWifiRequest)(nil),
		(*ControllerMessage_ConfigureEthernetRequest)(nil),
		(*ControllerMessage_ConfigureLoraPacketForwarderRequest)(nil),
	}
	file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*GatewayMessage_ErrorNotification)(nil),
		(*GatewayMessage_ClientHelloNotification)(nil),
		(*GatewayMessage_StatusNotification)(nil),
		(*GatewayMessage_ConfigureWifiResponse)(nil),
		(*GatewayMessage_ConfigureEthernetResponse)(nil),
		(*GatewayMessage_NetworkInterfacesNotification)(nil),
		(*GatewayMessage_NetworkPerformancesNotification)(nil),
		(*GatewayMessage_ScanWifiAccessPointsResponse)(nil),
		(*GatewayMessage_ConfigureLoraPacketForwarderResponse)(nil),
		(*GatewayMessage_LoraPacketForwarderStatusNotification)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tti_gateway_controller_southbound_v1_messages_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tti_gateway_controller_southbound_v1_messages_proto_goTypes,
		DependencyIndexes: file_tti_gateway_controller_southbound_v1_messages_proto_depIdxs,
		EnumInfos:         file_tti_gateway_controller_southbound_v1_messages_proto_enumTypes,
		MessageInfos:      file_tti_gateway_controller_southbound_v1_messages_proto_msgTypes,
	}.Build()
	File_tti_gateway_controller_southbound_v1_messages_proto = out.File
	file_tti_gateway_controller_southbound_v1_messages_proto_rawDesc = nil
	file_tti_gateway_controller_southbound_v1_messages_proto_goTypes = nil
	file_tti_gateway_controller_southbound_v1_messages_proto_depIdxs = nil
}
